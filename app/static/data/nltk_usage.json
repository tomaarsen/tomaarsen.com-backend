[["nltk", 111727], ["nltk.corpus", 25341], ["nltk.tokenize", 21379], ["nltk.tokenize.word_tokenize", 11533], ["nltk.corpus.stopwords", 10440], ["nltk.stem", 9682], ["nltk.corpus.stopwords.words", 9421], ["nltk.tag", 5984], ["nltk.sem", 5453], ["nltk.downloader", 5422], ["nltk.downloader.download", 5404], ["nltk.corpus.reader", 4793], ["nltk.sem.logic", 4202], ["nltk.tokenize.sent_tokenize", 3979], ["nltk.stem.wordnet.WordNetLemmatizer", 3768], ["nltk.stem.wordnet", 3768], ["nltk.compat", 3766], ["nltk.translate", 3750], ["nltk.parse", 3257], ["nltk.probability", 3119], ["nltk.stem.porter.PorterStemmer", 3116], ["nltk.stem.porter", 3116], ["nltk.tag.pos_tag", 3099], ["nltk.data", 3082], ["nltk.util", 2815], ["nltk.tree", 2688], ["nltk.corpus.wordnet", 2608], ["nltk.classify", 2517], ["nltk.corpus.reader.wordnet", 2385], ["nltk.tree.tree.Tree", 2283], ["nltk.tree.tree", 2283], ["nltk.translate.bleu_score", 2231], ["nltk.tokenize.regexp", 2141], ["nltk.probability.FreqDist", 1925], ["nltk.stem.snowball", 1908], ["nltk.internals", 1737], ["nltk.stem.snowball.SnowballStemmer", 1706], ["nltk.grammar", 1686], ["nltk.draw", 1640], ["nltk.tokenize.regexp.RegexpTokenizer", 1507], ["nltk.data.load", 1486], ["nltk.chunk", 1411], ["nltk.compat.python_2_unicode_compatible", 1402], ["nltk.parse.chart", 1363], ["nltk.corpus.brown", 1297], ["nltk.corpus.wordnet.synsets", 1278], ["nltk.metrics", 1132], ["nltk.draw.util", 1064], ["nltk.util.ngrams", 1003], ["nltk.tokenize.casual", 914], ["nltk.classify.util", 913], ["nltk.translate.bleu_score.sentence_bleu", 842], ["nltk.tokenize.casual.TweetTokenizer", 799], ["nltk.tree.tree.Tree.fromstring", 745], ["nltk.compat.string_types", 726], ["nltk.corpus.reader.xmldocs", 668], ["nltk.classify.naivebayes.NaiveBayesClassifier", 659], ["nltk.classify.naivebayes", 659], ["nltk.sentiment", 649], ["nltk.tag.sequential", 642], ["nltk.translate.bleu_score.SmoothingFunction", 639], ["nltk.tokenize.treebank", 638], ["nltk.translate.bleu_score.corpus_bleu", 635], ["nltk.corpus.movie_reviews", 633], ["nltk.corpus.reader.wordnet.NOUN", 627], ["nltk.classify.naivebayes.NaiveBayesClassifier.train", 612], ["nltk.data.find", 606], ["nltk.inference", 600], ["nltk.corpus.gutenberg", 592], ["nltk.sem.drt", 587], ["nltk.corpus.reader.wordnet.VERB", 583], ["nltk.corpus.reader.util", 564], ["nltk.sentiment.vader", 563], ["nltk.corpus.treebank", 561], ["nltk.corpus.reader.api", 559], ["nltk.sentiment.vader.SentimentIntensityAnalyzer", 554], ["nltk.data.path", 545], ["nltk.corpus.reader.wordnet.ADJ", 537], ["nltk.stem.lancaster.LancasterStemmer", 525], ["nltk.stem.lancaster", 525], ["nltk.corpus.reader.wordnet.ADV", 519], ["nltk.corpus.reader.api.CorpusReader", 484], ["nltk.ccg", 484], ["nltk.grammar.CFG", 480], ["nltk.text", 459], ["nltk.cluster", 457], ["nltk.tokenize.regexp.WordPunctTokenizer", 455], ["nltk.tokenize.treebank.TreebankWordTokenizer", 448], ["nltk.classify.util.accuracy", 444], ["nltk.collocations", 444], ["nltk.text.Text", 421], ["nltk.chunk.regexp", 420], ["nltk.draw.tree", 418], ["nltk.data.path.append", 412], ["nltk.tokenize.api", 406], ["nltk.tokenize.wordpunct_tokenize", 395], ["nltk.chat", 395], ["nltk.probability.ConditionalFreqDist", 393], ["nltk.sem.logic.Expression", 392], ["nltk.corpus.wordnet.synset", 390], ["nltk.corpus.reuters", 389], ["nltk.grammar.CFG.fromstring", 384], ["nltk.twitter", 375], ["nltk.tokenize.api.TokenizerI", 368], ["nltk.chunk.regexp.RegexpParser", 368], ["nltk.util.bigrams", 365], ["nltk.corpus.reader.xmldocs.XMLCorpusReader", 362], ["nltk.chunk.ne_chunk", 361], ["nltk.tokenize.punkt", 349], ["nltk.translate.IBMModel", 346], ["nltk.corpus.twitter_samples", 344], ["nltk.metrics.distance", 340], ["nltk.cluster.util", 328], ["nltk.tag.api", 327], ["nltk.inference.api", 322], ["nltk.parse.dependencygraph", 319], ["nltk.tag.stanford", 311], ["nltk.parse.featurechart", 311], ["nltk.tag.util", 303], ["nltk.tag.api.TaggerI", 298], ["nltk.metrics.scores", 298], ["nltk.grammar.Nonterminal", 296], ["nltk.parse.api.ParserI", 295], ["nltk.parse.api", 295], ["nltk.corpus.brown.words", 294], ["nltk.corpus.brown.sents", 291], ["nltk.chunk.util", 285], ["nltk.util.in_idle", 281], ["nltk.translate.ibm_model", 281], ["nltk.corpus.brown.tagged_sents", 280], ["nltk.corpus.words", 276], ["nltk.parse.dependencygraph.DependencyGraph", 271], ["nltk.tag.mapping", 270], ["nltk.tag.sequential.UnigramTagger", 268], ["nltk.tag.mapping.map_tag", 264], ["nltk.corpus.gutenberg.words", 257], ["nltk.corpus.words.words", 256], ["nltk.chat.util", 256], ["nltk.sem.logic.Variable", 246], ["nltk.corpus.reader.xmldocs.XMLCorpusView", 245], ["nltk.featstruct", 244], ["nltk.sem.logic.ApplicationExpression", 242], ["nltk.sem.linearlogic", 241], ["nltk.draw.util.CanvasFrame", 234], ["nltk.tokenize.punkt.PunktSentenceTokenizer", 234], ["nltk.lm", 233], ["nltk.metrics.distance.edit_distance", 232], ["nltk.corpus.movie_reviews.fileids", 229], ["nltk.tokenize.toktok.ToktokTokenizer", 226], ["nltk.tokenize.toktok", 226], ["nltk.ccg.combinator", 225], ["nltk.classify.maxent", 222], ["nltk.corpus.treebank.tagged_sents", 221], ["nltk.probability.DictionaryProbDist", 221], ["nltk.corpus.names", 220], ["nltk.collocations.BigramCollocationFinder", 220], ["nltk.draw.util.ShowText", 219], ["nltk.translate.IBMModel.MIN_PROB", 215], ["nltk.classify.api.ClassifierI", 215], ["nltk.classify.api", 215], ["nltk.sem.logic.Expression.fromstring", 214], ["nltk.sem.logic.NegatedExpression", 214], ["nltk.corpus.framenet", 214], ["nltk.parse.chart.ChartParser", 212], ["nltk.sem.logic.AndExpression", 211], ["nltk.tag.RegexpTagger", 208], ["nltk.corpus.movie_reviews.words", 207], ["nltk.metrics.BigramAssocMeasures", 206], ["nltk.compat.unicode_repr", 203], ["nltk.corpus.twitter_samples.strings", 198], ["nltk.compat.text_type", 196], ["nltk.internals.raise_unorderable_types", 194], ["nltk.tbl", 191], ["nltk.tokenize.treebank.TreebankWordDetokenizer", 189], ["nltk.tag.sequential.BigramTagger", 187], ["nltk.tag.brill", 187], ["nltk.sem.logic.AllExpression", 186], ["nltk.sem.logic.EqualityExpression", 186], ["nltk.sem.logic.ExistsExpression", 186], ["nltk.sem.logic.ImpExpression", 186], ["nltk.sem.logic.OrExpression", 186], ["nltk.util.LazyConcatenation", 183], ["nltk.compat.PY3", 182], ["nltk.sem.logic.LogicParser", 182], ["nltk.internals.find_binary", 180], ["nltk.inference.prover9", 179], ["nltk.collocations.BigramCollocationFinder.from_words", 178], ["nltk.tokenize.util", 178], ["nltk.corpus.reader.api.CorpusReader.__init__", 177], ["nltk.tokenize.regexp.WhitespaceTokenizer", 177], ["nltk.parse.chart.Chart", 176], ["nltk.stem.api.StemmerI", 174], ["nltk.stem.api", 174], ["nltk.cluster.util.VectorSpaceClusterer", 172], ["nltk.corpus.reader.xmldocs.XMLCorpusReader.__init__", 169], ["nltk.classify.maxent.MaxentClassifier", 169], ["nltk.corpus.reader.util.StreamBackedCorpusView", 167], ["nltk.tag.stanford.StanfordNERTagger", 166], ["nltk.classify.util.names_demo", 165], ["nltk.corpus.udhr", 165], ["nltk.util.LazyMap", 163], ["nltk.treetransforms", 163], ["nltk.sem.logic.unique_variable", 161], ["nltk.sem.logic.LambdaExpression", 161], ["nltk.classify.scikitlearn.SklearnClassifier", 161], ["nltk.corpus.webtext", 161], ["nltk.classify.scikitlearn", 161], ["nltk.ccg.api", 161], ["nltk.internals.config_java", 160], ["nltk.corpus.reader.util.concat", 160], ["nltk.translate.api", 159], ["nltk.translate.api.AlignedSent", 158], ["nltk.parse.pchart", 155], ["nltk.internals.java", 154], ["nltk.corpus.names.words", 153], ["nltk.tree.ParentedTree", 152], ["nltk.tag.util.str2tuple", 151], ["nltk.tokenize.regexp_tokenize", 151], ["nltk.sem.logic.Tokens", 150], ["nltk.util.trigrams", 149], ["nltk.inference.api.BaseProverCommand", 148], ["nltk.draw.util.CanvasWidget", 148], ["nltk.corpus.reader.tagged.TaggedCorpusReader", 147], ["nltk.corpus.reader.tagged", 147], ["nltk.parse.chart.TreeEdge", 146], ["nltk.internals.overridden", 145], ["nltk.draw.tree.tree_to_treesegment", 144], ["nltk.corpus.cmudict", 144], ["nltk.translate.Alignment", 142], ["nltk.grammar.PCFG", 142], ["nltk.compat.total_ordering", 140], ["nltk.corpus.nps_chat", 140], ["nltk.chat.util.Chat", 139], ["nltk.corpus.brown.tagged_words", 139], ["nltk.corpus.sentiwordnet", 139], ["nltk.internals.Counter", 138], ["nltk.classify.maxent.MaxentClassifier.train", 136], ["nltk.sem.logic.VariableExpression", 136], ["nltk.sem.logic.IffExpression", 136], ["nltk.corpus.inaugural", 136], ["nltk.draw.util.TextWidget", 134], ["nltk.parse.stanford", 134], ["nltk.sem.evaluate", 132], ["nltk.corpus.wordnet.all_synsets", 129], ["nltk.corpus.reader.bracket_parse.BracketParseCorpusReader", 129], ["nltk.corpus.reader.plaintext", 129], ["nltk.corpus.reader.bracket_parse", 129], ["nltk.corpus.gutenberg.raw", 127], ["nltk.sem.logic.AbstractVariableExpression", 127], ["nltk.translate.ibm_model.AlignmentInfo", 127], ["nltk.corpus.movie_reviews.categories", 126], ["nltk.grammar.Production", 126], ["nltk.grammar.FeatureGrammar", 126], ["nltk.sem.drt.DrtTokens", 125], ["nltk.tag.perceptron", 122], ["nltk.draw.tree.draw_trees", 121], ["nltk.utilities.clean_html", 121], ["nltk.draw.tree.TreeSegmentWidget", 121], ["nltk.utilities", 121], ["nltk.tag.util.untag", 120], ["nltk.tag.perceptron.PerceptronTagger", 120], ["nltk.corpus.cess_esp", 120], ["nltk.corpus.wordnet.morphy", 119], ["nltk.corpus.ptb", 119], ["nltk.parse.corenlp", 119], ["nltk.internals._java_options", 118], ["nltk.corpus.indian", 118], ["nltk.corpus.reuters.fileids", 117], ["nltk.chat.util.reflections", 117], ["nltk.parse.load_parser", 116], ["nltk.metrics.accuracy", 115], ["nltk.data.ZipFilePathPointer", 115], ["nltk.corpus.util.LazyCorpusLoader", 115], ["nltk.corpus.util", 115], ["nltk.tokenize.moses", 115], ["nltk.tag.sequential.TrigramTagger", 113], ["nltk.collocations.BigramAssocMeasures", 113], ["nltk.corpus.reader.plaintext.PlaintextCorpusReader", 112], ["nltk.chunk.util.ChunkScore", 111], ["nltk.translate.ibm_model.Counts", 110], ["nltk.corpus.sinica_treebank", 109], ["nltk.corpus.cmudict.dict", 108], ["nltk.tag.stanford.StanfordPOSTagger", 108], ["nltk.chunk.api.ChunkParserI", 108], ["nltk.chunk.api", 108], ["nltk.tag.DefaultTagger", 107], ["nltk.corpus.conll2000", 107], ["nltk.jsontags", 105], ["nltk.internals.find_file", 104], ["nltk.classify.megam", 103], ["nltk.draw.cfg.CFGEditor", 102], ["nltk.parse.malt.MaltParser", 102], ["nltk.draw.cfg", 102], ["nltk.parse.malt", 102], ["nltk.stem.snowball.EnglishStemmer", 101], ["nltk.sem.logic.is_indvar", 100], ["nltk.chunk.util.tree2conlltags", 100], ["nltk.metrics.scores.f_measure", 99], ["nltk.metrics.scores.precision", 99], ["nltk.metrics.scores.recall", 99], ["nltk.classify.util.apply_features", 99], ["nltk.probability.MLEProbDist", 99], ["nltk.compat.xrange", 98], ["nltk.cluster.util.cosine_distance", 98], ["nltk.corpus.conll2000.chunked_sents", 97], ["nltk.inference.mace", 97], ["nltk.corpus.cess_cat", 97], ["nltk.draw.util.EntryDialog", 96], ["nltk.corpus.opinion_lexicon", 95], ["nltk.corpus.gutenberg.sents", 94], ["nltk.probability.ConditionalProbDist", 93], ["nltk.help", 93], ["nltk.tbl.Template", 92], ["nltk.corpus.treebank.parsed_sents", 91], ["nltk.help.upenn_tagset", 91], ["nltk.corpus.floresta", 90], ["nltk.tgrep", 90], ["nltk.corpus.reader.xmldocs.XMLCorpusView.__init__", 89], ["nltk.data.PathPointer", 88], ["nltk.twitter.api", 88], ["nltk.tree.ParentedTree.fromstring", 87], ["nltk.corpus.brown.categories", 87], ["nltk.internals.ElementWrapper", 87], ["nltk.chunk.tagstr2tree", 86], ["nltk.translate.IBMModel4", 86], ["nltk.corpus.udhr.words", 85], ["nltk.corpus.reuters.categories", 85], ["nltk.corpus.webtext.words", 83], ["nltk.parse.featurechart.FeatureChartParser", 83], ["nltk.grammar.nonterminals", 83], ["nltk.internals.find_jar", 82], ["nltk.corpus.sentiwordnet.senti_synsets", 80], ["nltk.parse.pchart.InsideChartParser", 80], ["nltk.probability.ELEProbDist", 80], ["nltk.util.Trie", 80], ["nltk.corpus.conll2002", 80], ["nltk.corpus.gutenberg.fileids", 79], ["nltk.corpus.nps_chat.words", 78], ["nltk.tree.ProbabilisticTree", 78], ["nltk.sem.drt.DrtParser", 78], ["nltk.corpus.treebank.words", 77], ["nltk.grammar.FeatureGrammar.fromstring", 77], ["nltk.parse.corenlp.CoreNLPParser", 77], ["nltk.inference.prover9.Prover9", 77], ["nltk.tag.hmm", 77], ["nltk.parse.chart.EdgeI", 76], ["nltk.tokenize.util.string_span_tokenize", 76], ["nltk.classify.tadm", 76], ["nltk.corpus.lin_thesaurus", 76], ["nltk.sem.logic.IndividualVariableExpression", 75], ["nltk.util.OrderedDict", 75], ["nltk.sem.evaluate.Valuation", 75], ["nltk.tokenize.simple", 75], ["nltk.inference.api.BaseProverCommand.__init__", 74], ["nltk.parse.chart.BottomUpPredictCombineRule", 74], ["nltk.parse.chart.BottomUpPredictRule", 74], ["nltk.parse.chart.LeafEdge", 74], ["nltk.parse.chart.LeafInitRule", 74], ["nltk.parse.chart.SingleEdgeFundamentalRule", 74], ["nltk.parse.chart.TopDownInitRule", 74], ["nltk.inference.api.Prover", 74], ["nltk.sem.drt.DrtVariableExpression", 74], ["nltk.jsontags.register_tag", 74], ["nltk.corpus.state_union", 74], ["nltk.translate.meteor_score", 74], ["nltk.twitter.common", 74], ["nltk.corpus.reuters.words", 73], ["nltk.corpus.brown.fileids", 73], ["nltk.cluster.util.VectorSpaceClusterer.__init__", 73], ["nltk.grammar.PCFG.fromstring", 72], ["nltk.parse.stanford.StanfordParser", 72], ["nltk.internals.deprecated", 72], ["nltk.chunk.util.conlltags2tree", 72], ["nltk.corpus.genesis", 72], ["nltk.ccg.lexicon", 72], ["nltk.tokenize.moses.MosesDetokenizer", 71], ["nltk.inference.mace.Mace", 70], ["nltk.twitter.util", 70], ["nltk.compat.izip", 69], ["nltk.internals.find_jars_within_path", 68], ["nltk.corpus.ieer", 68], ["nltk.test", 68], ["nltk.corpus.mac_morpho", 67], ["nltk.corpus.cess_esp.words", 66], ["nltk.sem.logic.Type", 66], ["nltk.twitter.api.TweetHandlerI", 66], ["nltk.translate.stack_decoder", 66], ["nltk.corpus.reuters.raw", 65], ["nltk.ccg.api.FunctionalCategory", 65], ["nltk.data.FileSystemPathPointer", 65], ["nltk.grammar.is_nonterminal", 64], ["nltk.corpus.wordnet._unload", 63], ["nltk.treetransforms.chomsky_normal_form", 63], ["nltk.util.Index", 63], ["nltk.__version__", 63], ["nltk.featstruct.FeatStruct", 63], ["nltk.corpus.genesis.words", 62], ["nltk.classify.util.binary_names_demo_features", 62], ["nltk.internals.slice_bounds", 62], ["nltk.tokenize.util.regexp_span_tokenize", 62], ["nltk.corpus.inaugural.words", 61], ["nltk.corpus.reader.util.StreamBackedCorpusView.__init__", 61], ["nltk.parse.stanford.StanfordDependencyParser", 61], ["nltk.grammar.is_terminal", 61], ["nltk.corpus.reader.xmldocs.ElementTree.parse", 61], ["nltk.corpus.reader.xmldocs.ElementTree", 61], ["nltk.corpus.treebank.tagged_words", 60], ["nltk.metrics.BigramAssocMeasures.chi_sq", 60], ["nltk.sem.drt.DrtExpression", 60], ["nltk.parse.RecursiveDescentParser", 59], ["nltk.compat.Counter", 59], ["nltk.corpus.reader.tagged.TaggedCorpusReader.__init__", 58], ["nltk.corpus.alpino", 58], ["nltk.book", 57], ["nltk.grammar.DependencyGrammar.fromstring", 56], ["nltk.corpus.state_union.raw", 56], ["nltk.corpus.wordnet.synset_from_pos_and_offset", 56], ["nltk.stem.snowball.SnowballStemmer.languages", 56], ["nltk.grammar.DependencyGrammar", 56], ["nltk.sentiment.util", 56], ["nltk.collocations.TrigramAssocMeasures", 55], ["nltk.tag.brill.Pos", 55], ["nltk.corpus.floresta.words", 54], ["nltk.corpus.wordnet_ic.ic", 54], ["nltk.probability.ProbabilisticMixIn", 54], ["nltk.corpus.wordnet_ic", 54], ["nltk.tree.Tree", 54], ["nltk.compat.Fraction", 53], ["nltk.wsd.lesk", 53], ["nltk.sem.logic.LogicalExpressionException", 53], ["nltk.translate.meteor_score.meteor_score", 53], ["nltk.tokenize.punkt.PunktLanguageVars", 53], ["nltk.stem.rslp.RSLPStemmer", 53], ["nltk.wsd", 53], ["nltk.stem.rslp", 53], ["nltk.corpus.indian.words", 52], ["nltk.corpus.twitter_samples.tokenized", 52], ["nltk.sem.logic.FunctionVariableExpression", 52], ["nltk.grammar.FeatStructNonterminal", 52], ["nltk.inference.prover9.Prover9Command", 52], ["nltk.corpus.reader.wordnet.Synset", 52], ["nltk.sem.cooper_storage", 52], ["nltk.parse.chart.AbstractChartRule", 51], ["nltk.featstruct.TYPE", 51], ["nltk.translate.IBMModel1", 51], ["nltk.sem.skolemize.skolemize", 51], ["nltk.sem.skolemize", 51], ["nltk.lm.preprocessing", 51], ["nltk.parse.chart.TreeEdge.__init__", 50], ["nltk.corpus.wordnet.lemma", 50], ["nltk.classify.util.log_likelihood", 50], ["nltk.data.SeekableUnicodeStreamReader", 50], ["nltk.sem.glue.DrtGlue", 50], ["nltk.sem.logic.BooleanExpression", 50], ["nltk.parse.chart.CachedTopDownPredictRule", 50], ["nltk.parse.chart.EmptyPredictRule", 50], ["nltk.parse.featurechart.FeatureChart", 50], ["nltk.metrics.BigramAssocMeasures.pmi", 50], ["nltk.treetransforms.collapse_unary", 50], ["nltk.treetransforms.un_chomsky_normal_form", 50], ["nltk.probability.ImmutableProbabilisticMixIn", 50], ["nltk.inference.api.BaseModelBuilderCommand", 50], ["nltk.sem.glue", 50], ["nltk.util.everygrams", 49], ["nltk.tokenize.mwe.MWETokenizer", 49], ["nltk.tokenize.mwe", 49], ["nltk.tokenize.casual.EMOTICON_RE", 49], ["nltk.corpus.cess_cat.words", 48], ["nltk.sem.logic.LogicParser.__init__", 48], ["nltk.corpus.wordnet._morphy", 48], ["nltk.data.LazyLoader", 48], ["nltk.draw.util.ColorizedList", 48], ["nltk.draw.util.SymbolWidget.SYMBOLS", 48], ["nltk.parse.dependencygraph.conll_data2.split", 48], ["nltk.sem.logic.APP", 48], ["nltk.cluster.kmeans.KMeansClusterer", 48], ["nltk.twitter.util.credsfromfile", 48], ["nltk.tag.brill.Word", 48], ["nltk.draw.util.SymbolWidget", 48], ["nltk.parse.dependencygraph.conll_data2", 48], ["nltk.cluster.kmeans", 48], ["nltk.corpus.reader.util.find_corpus_fileids", 47], ["nltk.tokenize.casual.casual_tokenize", 47], ["nltk.corpus.cess_cat.tagged_sents", 46], ["nltk.corpus.wordnet.path_similarity", 46], ["nltk.sem.logic.ConstantExpression", 46], ["nltk.corpus.opinion_lexicon.negative", 46], ["nltk.tbl.feature.Feature", 46], ["nltk.tbl.feature", 46], ["nltk.corpus.conll2007", 46], ["nltk.parse.util", 46], ["nltk.corpus.opinion_lexicon.positive", 45], ["nltk.corpus.twitter_samples.abspath", 45], ["nltk.tokenize.moses.MosesTokenizer", 44], ["nltk.compat.raw_input", 44], ["nltk.internals.find_dir", 44], ["nltk.translate.IBMModel2", 44], ["nltk.translate.IBMModel3", 44], ["nltk.translate.ibm_model.longest_target_sentence_length", 44], ["nltk.ccg.api.CCGVar", 44], ["nltk.corpus.reader.api.CategorizedCorpusReader", 44], ["nltk.classify.rte_classify", 44], ["nltk.corpus.brown.raw", 43], ["nltk.corpus.wordnet.wup_similarity", 43], ["nltk.translate.IBMModel4.model4_prob_t_a_given_s", 43], ["nltk.corpus.webtext.fileids", 42], ["nltk.compat.integer_types", 42], ["nltk.corpus.reader.xmldocs.XMLCorpusView.read_block", 42], ["nltk.sem.logic.BasicType", 42], ["nltk.tag.brill_trainer.BrillTaggerTrainer", 42], ["nltk.metrics.distance.jaccard_distance", 42], ["nltk.compat.StringIO", 42], ["nltk.sem.logic.ANY_TYPE", 42], ["nltk.translate.IBMModel5", 42], ["nltk.tag.brill_trainer", 42], ["nltk.compat.iteritems", 41], ["nltk.corpus.sentiwordnet.senti_synset", 41], ["nltk.stem.isri.ISRIStemmer", 41], ["nltk.tokenize.stanford", 41], ["nltk.stem.isri", 41], ["nltk.corpus.stopwords.fileids", 40], ["nltk.tokenize.line_tokenize", 40], ["nltk.util.Trie.LEAF", 40], ["nltk.tag.sequential.ClassifierBasedTagger", 40], ["nltk.tokenize.stanford.StanfordTokenizer", 40], ["nltk.corpus.rte", 40], ["nltk.tree.Tree.parse", 39], ["nltk.corpus.ieer.parsed_docs", 39], ["nltk.probability.LidstoneProbDist", 39], ["nltk.translate.bleu", 39], ["nltk.collocations.TrigramCollocationFinder", 39], ["nltk.corpus.subjectivity", 39], ["nltk.corpus.indian.tagged_sents", 38], ["nltk.corpus.rte.pairs", 38], ["nltk.metrics.BigramAssocMeasures.likelihood_ratio", 38], ["nltk.tokenize.api.StringTokenizer", 38], ["nltk.tokenize.simple.SpaceTokenizer", 38], ["nltk.corpus.reader.conll", 38], ["nltk.sem.drt.DrtExpression.fromstring", 37], ["nltk.corpus.inaugural.fileids", 37], ["nltk.draw.util.CanvasWidget.__init__", 37], ["nltk.draw.util.BoxWidget", 37], ["nltk.draw.util.CanvasWidget.__getitem__", 37], ["nltk.draw.util.CanvasWidget.__setitem__", 37], ["nltk.draw.util.OvalWidget", 37], ["nltk.draw.util.ParenWidget", 37], ["nltk.corpus.wordnet._synset_from_pos_and_offset", 37], ["nltk.collocations.BigramCollocationFinder.from_documents", 37], ["nltk.corpus.reader.conll.ConllCorpusReader", 37], ["nltk.tag.tnt", 37], ["nltk.toolbox", 37], ["nltk.corpus.wordnet.lemmas", 36], ["nltk.parse.SteppingRecursiveDescentParser", 36], ["nltk.parse.SteppingShiftReduceParser", 36], ["nltk.classify.util.partial_names_demo", 36], ["nltk.corpus.reader.util.read_alignedsent_block", 36], ["nltk.chunk.ieerstr2tree", 36], ["nltk.tree.sinica_parse", 36], ["nltk.toolbox.ToolboxData", 36], ["nltk.corpus.reader.bracket_parse.BracketParseCorpusReader._parse", 36], ["nltk.sem.logic.skolem_function", 36], ["nltk.corpus.conll2002.iob_sents", 36], ["nltk.corpus.reader.wordlist", 36], ["nltk.corpus.conll2002.chunked_sents", 35], ["nltk.corpus.wordnet.all_lemma_names", 35], ["nltk.internals.find_jar_iter", 35], ["nltk.util.tokenwrap", 35], ["nltk.corpus.reader.wordlist.WordListCorpusReader", 35], ["nltk.tag.tnt.TnT", 35], ["nltk.tokenize.simple.LineTokenizer", 35], ["nltk.stem.util", 35], ["nltk.corpus.stopwords.append", 34], ["nltk.corpus.wordnet.ADJ_SAT", 34], ["nltk.data.show_cfg", 34], ["nltk.classify.Senna", 34], ["nltk.tag.pos_tag_sents", 34], ["nltk.parse.viterbi.ViterbiParser", 34], ["nltk.metrics.confusionmatrix.ConfusionMatrix", 34], ["nltk.parse.viterbi", 34], ["nltk.metrics.confusionmatrix", 34], ["nltk.corpus.alpino.words", 33], ["nltk.lm.MLE", 33], ["nltk.corpus.framenet.frames", 33], ["nltk.cluster.util.euclidean_distance", 33], ["nltk.util.flatten", 33], ["nltk.stem.regexp.RegexpStemmer", 33], ["nltk.metrics.agreement", 33], ["nltk.stem.regexp", 33], ["nltk.parse.generate", 33], ["nltk.re", 33], ["nltk.classify.DecisionTreeClassifier.train", 32], ["nltk.translate.bleu_score.modified_precision", 32], ["nltk.treeprettyprinter.TreePrettyPrinter", 32], ["nltk.parse.ShiftReduceParser", 32], ["nltk.grammar.toy_pcfg2", 32], ["nltk.parse.corenlp.CoreNLPDependencyParser", 32], ["nltk.tag.util.tuple2str", 32], ["nltk.sem.logic.ComplexType", 32], ["nltk.classify.DecisionTreeClassifier", 32], ["nltk.treeprettyprinter", 32], ["nltk.translate.nist_score", 32], ["nltk.corpus.subjectivity.sents", 31], ["nltk.corpus.reuters.sents", 31], ["nltk.corpus.mac_morpho.tagged_sents", 31], ["nltk.corpus.floresta.tagged_sents", 31], ["nltk.collocations.TrigramCollocationFinder.from_words", 31], ["nltk.corpus.movie_reviews.raw", 31], ["nltk.corpus.treebank_chunk.chunked_sents", 31], ["nltk.corpus.cmudict.entries", 31], ["nltk.corpus.framenet.frame", 31], ["nltk.corpus.framenet.frames_by_lemma", 31], ["nltk.text.TextCollection", 31], ["nltk.corpus.reader.api.SyntaxCorpusReader", 31], ["nltk.corpus.reader.ChunkedCorpusReader", 31], ["nltk.corpus.treebank_chunk", 31], ["nltk.corpus.cess_esp.tagged_sents", 30], ["nltk.parse.generate.generate", 30], ["nltk.metrics.distance.binary_distance", 30], ["nltk.lm.vocabulary.Vocabulary", 30], ["nltk.lm.vocabulary", 30], ["nltk.corpus.senseval", 30], ["nltk.chat.eliza", 30], ["nltk.corpus.europarl_raw", 30], ["nltk.corpus.treebank.sents", 29], ["nltk.corpus.ptb.fileids", 29], ["nltk.corpus.udhr.fileids", 29], ["nltk.corpus.senseval.instances", 29], ["nltk.sentiment.SentimentAnalyzer", 29], ["nltk.cluster.GAAClusterer", 29], ["nltk.metrics.agreement.AnnotationTask", 29], ["nltk.translate.gleu_score", 29], ["nltk.sem.relextract", 29], ["nltk.corpus.mac_morpho.words", 28], ["nltk.corpus.machado.words", 28], ["nltk.chunk.accuracy", 28], ["nltk.corpus.ieer.fileids", 28], ["nltk.corpus.treebank.fileids", 28], ["nltk.corpus.udhr.raw", 28], ["nltk.corpus.sinica_treebank.parsed_sents", 28], ["nltk.corpus.reader.util.read_line_block", 28], ["nltk.metrics.BigramAssocMeasures.raw_freq", 28], ["nltk.corpus.framenet.lus", 28], ["nltk.compat.urlopen", 28], ["nltk.compat.itervalues", 28], ["nltk.tag.api.FeaturesetTaggerI", 28], ["nltk.lm.preprocessing.padded_everygram_pipeline", 28], ["nltk.classify.megam.config_megam", 28], ["nltk.chunk.tree2conllstr", 28], ["nltk.sem.evaluate.Assignment", 28], ["nltk.sem.evaluate.Model", 28], ["nltk.grammar.parse_cfg", 28], ["nltk.tree.ImmutableTree", 28], ["nltk.corpus.machado", 28], ["nltk.chunk.named_entity", 28], ["nltk.corpus.nombank", 28], ["nltk.stem.porter.PorterStemmer.__init__", 27], ["nltk.probability.ProbabilisticMixIn.__init__", 27], ["nltk.tokenize.punkt.PunktParameters", 27], ["nltk.corpus.nps_chat.tagged_posts", 27], ["nltk.ccg.api.PrimitiveCategory", 27], ["nltk.corpus.reader.util.read_blankline_block", 27], ["nltk.util.AbstractLazySequence", 27], ["nltk.sem.logic.BinaryExpression", 27], ["nltk.probability.MutableProbDist", 27], ["nltk.metrics.spearman_correlation", 27], ["nltk.inference.mace.MaceCommand", 27], ["nltk.probability.DictionaryConditionalProbDist", 27], ["nltk.draw.dispersion.dispersion_plot", 27], ["nltk.grammar.toy_pcfg1", 27], ["nltk.draw.dispersion", 27], ["nltk.chat.iesha", 27], ["nltk.chat.rude", 27], ["nltk.chat.suntsu", 27], ["nltk.chat.zen", 27], ["nltk.corpus.sinica_treebank.words", 26], ["nltk.ccg.lexicon.fromstring", 26], ["nltk.translate.Alignment.fromstring", 26], ["nltk.parse.chart.Chart.__init__", 26], ["nltk.util.slice_bounds", 26], ["nltk.classify.tadm.write_tadm_file", 26], ["nltk.probability.sum_logs", 26], ["nltk.classify.util.names_demo_features", 26], ["nltk.corpus.lin_thesaurus.scored_synonyms", 26], ["nltk.internals.import_from_stdlib", 26], ["nltk.draw.table.Table", 26], ["nltk.internals.is_writable", 26], ["nltk.induce_pcfg", 26], ["nltk.sem.cooper_storage.CooperStore", 26], ["nltk.sem.cooper_storage.parse_with_bindops", 26], ["nltk.util.unique_list", 26], ["nltk.twitter.Query", 26], ["nltk.cluster.util.VectorSpaceClusterer.cluster", 26], ["nltk.chunk.regexp.RegexpChunkParser", 26], ["nltk.tag.brill.BrillTagger", 26], ["nltk.ccg.chart", 26], ["nltk.draw.table", 26], ["nltk.compat.htmlentitydefs", 26], ["nltk.classify.maxent.TadmEventMaxentFeatureEncoding.train", 25], ["nltk.classify.maxent.TadmMaxentClassifier.train", 25], ["nltk.corpus.sinica_treebank.sents", 25], ["nltk.corpus.alpino.tagged_sents", 25], ["nltk.corpus.sinica_treebank.tagged_sents", 25], ["nltk.inference.api.BaseModelBuilderCommand.__init__", 25], ["nltk.parse.chart.ChartParser.__init__", 25], ["nltk.sem.drt.DrtParser.__init__", 25], ["nltk.tag.ClassifierBasedTagger.__init__", 25], ["nltk.probability.ImmutableProbabilisticMixIn.__init__", 25], ["nltk.sem.drt.DrtParser.parse", 25], ["nltk.sem.logic.Tokens.SYMBOLS", 25], ["nltk.ccg.combinator.BackwardApplication", 25], ["nltk.ccg.combinator.BackwardBx", 25], ["nltk.ccg.combinator.BackwardComposition", 25], ["nltk.ccg.combinator.BackwardSx", 25], ["nltk.ccg.combinator.BackwardT", 25], ["nltk.ccg.combinator.ForwardApplication", 25], ["nltk.ccg.combinator.ForwardComposition", 25], ["nltk.ccg.combinator.ForwardSubstitution", 25], ["nltk.ccg.combinator.ForwardT", 25], ["nltk.ccg.api.Direction", 25], ["nltk.chunk.named_entity.build_model", 25], ["nltk.probability.entropy", 25], ["nltk.classify.megam.call_megam", 25], ["nltk.classify.megam.parse_megam_weights", 25], ["nltk.classify.megam.write_megam_file", 25], ["nltk.classify.tadm.call_tadm", 25], ["nltk.classify.tadm.parse_tadm_weights", 25], ["nltk.classify.util.CutoffChecker", 25], ["nltk.data.gzip_open_unicode", 25], ["nltk.cluster.EMClusterer", 25], ["nltk.cluster.util.Dendrogram", 25], ["nltk.cluster.api.ClusterI", 25], ["nltk.metrics.ranks_from_scores", 25], ["nltk.corpus.lin_thesaurus.similarity", 25], ["nltk.corpus.lin_thesaurus.synonyms", 25], ["nltk.util.LazySubsequence", 25], ["nltk.util.binary_search_file", 25], ["nltk.corpus.reader.util._path_from", 25], ["nltk.featstruct.FeatDict", 25], ["nltk.featstruct.FeatStruct.__hash__", 25], ["nltk.featstruct.FeatStructReader", 25], ["nltk.featstruct.SLASH", 25], ["nltk.util.invert_graph", 25], ["nltk.util.transitive_closure", 25], ["nltk.sem.drt.AnaphoraResolutionException", 25], ["nltk.sem.drt.resolve_anaphora", 25], ["nltk.sem.root_semrep", 25], ["nltk.inference.api.ModelBuilder", 25], ["nltk.inference.prover9.Prover9CommandParent", 25], ["nltk.inference.prover9.Prover9Parent", 25], ["nltk.inference.api.ProverCommandDecorator", 25], ["nltk.sem.logic.operator.or_", 25], ["nltk.parse.chart.FilteredBottomUpPredictCombineRule", 25], ["nltk.parse.chart.FilteredSingleEdgeFundamentalRule", 25], ["nltk.parse.chart.demo_grammar", 25], ["nltk.parse.featurechart.FeatureBottomUpPredictCombineRule", 25], ["nltk.parse.featurechart.FeatureBottomUpPredictRule", 25], ["nltk.parse.featurechart.FeatureEmptyPredictRule", 25], ["nltk.parse.featurechart.FeatureSingleEdgeFundamentalRule", 25], ["nltk.parse.featurechart.FeatureTopDownInitRule", 25], ["nltk.parse.featurechart.FeatureTopDownPredictRule", 25], ["nltk.featstruct.find_variables", 25], ["nltk.featstruct.unify", 25], ["nltk.parse.chart.FundamentalRule", 25], ["nltk.parse.pchart.LongestChartParser", 25], ["nltk.parse.pchart.RandomChartParser", 25], ["nltk.parse.pchart.UnsortedChartParser", 25], ["nltk.grammar.DependencyProduction", 25], ["nltk.sem.drt.DRS", 25], ["nltk.sem.drt.DrtApplicationExpression", 25], ["nltk.sem.drt.DrtEqualityExpression", 25], ["nltk.sem.drt.DrtNegatedExpression", 25], ["nltk.sem.drt.DrtOrExpression", 25], ["nltk.sem.drt.DrtProposition", 25], ["nltk.sem.drt.DrtTokens.CLOSE", 25], ["nltk.sem.logic.Tokens.CLOSE", 25], ["nltk.sem.drt.DrtTokens.CLOSE_BRACKET", 25], ["nltk.sem.drt.DrtTokens.COMMA", 25], ["nltk.sem.drt.DrtTokens.OPEN", 25], ["nltk.sem.logic.Tokens.OPEN", 25], ["nltk.sem.drt.DrtTokens.OPEN_BRACKET", 25], ["nltk.sem.logic.ExpectedMoreTokensException", 25], ["nltk.sem.logic.UnexpectedTokenException", 25], ["nltk.sem.is_rel", 25], ["nltk.parse.featurechart.InstantiateVarsChart", 25], ["nltk.sem.logic.EventVariableExpression", 25], ["nltk.sem.logic.Tokens.NEQ_LIST", 25], ["nltk.sem.logic.Tokens.TOKENS", 25], ["nltk.sem.logic.is_eventvar", 25], ["nltk.sem.logic.is_funcvar", 25], ["nltk.sem.drt.DrsDrawer", 25], ["nltk.tag.brill.brill24", 25], ["nltk.tag.AffixTagger", 25], ["nltk.sem.linearlogic.Expression", 25], ["nltk.corpus.verbnet", 25], ["nltk.classify.maxent.TadmEventMaxentFeatureEncoding", 25], ["nltk.classify.maxent.TadmMaxentClassifier", 25], ["nltk.tag.ClassifierBasedTagger", 25], ["nltk.cluster.api", 25], ["nltk.sem.logic.operator", 25], ["nltk.align", 25], ["nltk.corpus.semcor", 25], ["nltk.sem.linearlogic.ApplicationExpression", 24], ["nltk.sem.linearlogic.ImpExpression", 24], ["nltk.corpus.indian.tagged_words", 24], ["nltk.corpus.ptb.tagged_words", 24], ["nltk.sem.linearlogic.VariableExpression", 24], ["nltk.grammar.nonterminals.split", 24], ["nltk.sem.linearlogic.ConstantExpression", 24], ["nltk.sem.logic.Expression.__hash__", 24], ["nltk.draw.util.MutableOptionMenu", 24], ["nltk.parse.chart.SteppingChartParser", 24], ["nltk.parse.chart.TopDownPredictRule", 24], ["nltk.corpus.reader.wordnet.Lemma", 24], ["nltk.chat.eliza.eliza_chat", 24], ["nltk.corpus.framenet.buildindexes", 24], ["nltk.corpus.framenet.lu_basic", 24], ["nltk.compat.py3_data", 24], ["nltk.sem.logic.SubstituteBindingsI", 24], ["nltk.corpus.treebank._fileids", 24], ["nltk.tree.ImmutableTree.convert", 24], ["nltk.sem.drt.DrtLambdaExpression", 24], ["nltk.sem.linearlogic.AtomicExpression", 24], ["nltk.sem.linearlogic.BindingDict", 24], ["nltk.sem.linearlogic.LinearLogicApplicationException", 24], ["nltk.sem.linearlogic.LinearLogicParser", 24], ["nltk.sem.linearlogic.UnificationException", 24], ["nltk.stem.util.suffix_replace", 24], ["nltk.probability.RandomProbDist", 24], ["nltk.sem.logic._counter._value", 24], ["nltk.corpus.wordnet.lemma_from_key", 24], ["nltk.tokenize.casual.EMOTICON_RE.findall", 24], ["nltk.translate.PhraseTable", 24], ["nltk.twitter.Streamer", 24], ["nltk.twitter.TweetViewer", 24], ["nltk.twitter.TweetWriter", 24], ["nltk.twitter.Twitter", 24], ["nltk.draw.tree.TreeWidget", 24], ["nltk.translate.stack_decoder.StackDecoder", 24], ["nltk.classify.rte_classify.rte_classifier", 24], ["nltk.sem.logic._counter", 24], ["nltk.chunk.regexp.RegexpChunkRule", 24], ["nltk.corpus.reader.timit", 24], ["nltk.corpus.reader.ConllCorpusReader", 24], ["nltk.corpus.ptb.words", 23], ["nltk.chunk.regexp.RegexpChunkRule.fromstring", 23], ["nltk.corpus.udhr.sents", 23], ["nltk.corpus.conll2007.sents", 23], ["nltk.corpus.reader.api.CorpusReader.fileids", 23], ["nltk.corpus.ptb.categories", 23], ["nltk.corpus.conll2007.parsed_sents", 23], ["nltk.corpus.reader.util.FileSystemPathPointer", 23], ["nltk.corpus.reader.SeekableUnicodeStreamReader", 23], ["nltk.tree.ParentedTree.convert", 23], ["nltk.stem.snowball.RussianStemmer", 23], ["nltk.translate.bleu_score.closest_ref_length", 23], ["nltk.lazyimport.LazyModule", 23], ["nltk.chat.iesha.iesha_chat", 23], ["nltk.chat.rude.rude_chat", 23], ["nltk.chat.suntsu.suntsu_chat", 23], ["nltk.chat.zen.zen_chat", 23], ["nltk.corpus.crubadan", 23], ["nltk.corpus.reader.xmldocs.XMLCorpusReader.xml", 23], ["nltk.corpus.reader.timit.read_timit_block", 23], ["nltk.util.breadth_first", 23], ["nltk.compat.add_py3_data", 23], ["nltk.jsontags.json_tags", 23], ["nltk.sem.read_logic", 23], ["nltk.sem.read_valuation", 23], ["nltk.grammar._read_cfg_production", 23], ["nltk.internals.read_str", 23], ["nltk.grammar.ProbabilisticDependencyGrammar", 23], ["nltk.tbl.Template.ALLTEMPLATES", 23], ["nltk.tag.brill.Pos.expand", 23], ["nltk.tag.brill.Word.expand", 23], ["nltk.tbl.Template.expand", 23], ["nltk.tbl.error_list", 23], ["nltk.tbl.rule.Rule", 23], ["nltk.corpus.reader.util.read_whitespace_block", 23], ["nltk.tgrep.tgrep_nodes", 23], ["nltk.twitter.common.json2csv", 23], ["nltk.twitter.common.json2csv_entities", 23], ["nltk.parse.util.extract_test_sentences", 23], ["nltk.translate.nist_score.sentence_nist", 23], ["nltk.tag.hmm._create_hmm_tagger", 23], ["nltk.tag.hmm._market_hmm_example", 23], ["nltk.lazyimport", 23], ["nltk.tbl.rule", 23], ["nltk.lm.api", 23], ["nltk.model", 23], ["nltk.corpus.reader.api.CategorizedCorpusReader.__init__", 22], ["nltk.twitter.api.TweetHandlerI.__init__", 22], ["nltk.corpus.reader.util.ZipFilePathPointer", 22], ["nltk.corpus.wordnet.lch_similarity", 22], ["nltk.translate.bleu_score.brevity_penalty", 22], ["nltk.util.py25", 22], ["nltk.tgrep.TgrepException", 22], ["nltk.tgrep.tgrep_positions", 22], ["nltk.tgrep.tgrep_tokenize", 22], ["nltk.parse.util.taggedsents_to_conll", 22], ["nltk.tokenize.casual.EMOTICON_RE.sub", 22], ["nltk.corpus.twitter_samples.docs", 22], ["nltk.twitter.api.BasicTweetHandler", 22], ["nltk.twitter.api.TweetHandlerI.do_continue", 22], ["nltk.twitter.util.guess_path", 22], ["nltk.ne_chunk_sents", 22], ["nltk.lm.counter.NgramCounter", 22], ["nltk.lm.counter", 22], ["nltk.metrics.aline", 22], ["nltk.stem.snowball.PorterStemmer", 21], ["nltk.corpus.twitter_samples.fileids", 21], ["nltk.align.AlignedSent", 21], ["nltk.corpus.webtext.raw", 21], ["nltk.translate.meteor_score.single_meteor_score", 21], ["nltk.corpus.perluniprops.chars", 21], ["nltk.twitter.Authenticate", 21], ["nltk.translate.IBMModel5.MIN_SCORE_FACTOR", 21], ["nltk.translate.StackDecoder.valid_phrases", 21], ["nltk.translate.stack_decoder._Hypothesis", 21], ["nltk.translate.stack_decoder._Stack", 21], ["nltk.sentiment.util.mark_negation", 21], ["nltk.corpus.perluniprops", 21], ["nltk.translate.StackDecoder", 21], ["nltk.tag.senna", 21], ["nltk.cfg", 21], ["nltk.corpus.inaugural.raw", 20], ["nltk.compat.BytesIO", 20], ["nltk.compat.get_im_class", 20], ["nltk.parse.chart.TreeEdge.__unicode__", 20], ["nltk.util.py26", 20], ["nltk.corpus.nps_chat.xml_posts", 20], ["nltk.sem.logic.TRUTH_TYPE", 20], ["nltk.tag.hmm.HiddenMarkovModelTrainer", 20], ["nltk.probability.SimpleGoodTuringProbDist", 20], ["nltk.test.unit.utils.skipIf", 19], ["nltk.ccg.lexicon.Token", 19], ["nltk.ccg.api.CCGVar.reset_id", 19], ["nltk.sentiment.util.save_file", 19], ["nltk.util.choose", 19], ["nltk.tag.senna.SennaTagger", 19], ["nltk.classify.PositiveNaiveBayesClassifier", 19], ["nltk.test.unit", 19], ["nltk.test.unit.utils", 19], ["nltk.lm.smoothing", 19], ["nltk.corpus.wordnet.words", 18], ["nltk.tokenize.util.align_tokens", 18], ["nltk.compat.UTC", 18], ["nltk.compat.UnicodeWriter", 18], ["nltk.corpus.reader.wordnet.WordNetCorpusReader", 18], ["nltk.tag.NgramTagger", 18], ["nltk.tag.sequential.SequentialBackoffTagger", 18], ["nltk.compat.TemporaryDirectory", 17], ["nltk.grammar.ContextFreeGrammar", 17], ["nltk.tokenize.stanford_segmenter.StanfordSegmenter", 17], ["nltk.corpus.reader.plaintext.CategorizedPlaintextCorpusReader", 17], ["nltk.tokenize.stanford_segmenter", 17], ["nltk.six", 17], ["nltk.corpus.toolbox", 17], ["nltk.corpus.ptb.parsed_sents", 16], ["nltk.defaultdict", 16], ["nltk.tokenize.sexpr", 16], ["nltk.corpus.comtrans", 16], ["nltk.corpus.swadesh", 16], ["nltk.corpus.names.fileids", 15], ["nltk.sem.logic.ComplexType.__hash__", 15], ["nltk.corpus.wordnet.ensure_loaded", 15], ["nltk.classify.decisiontree.DecisionTreeClassifier", 15], ["nltk.classify.maxent.MaxentClassifier.__doc__", 15], ["nltk.corpus.stopwords.extend", 15], ["nltk.stem.snowball.FrenchStemmer", 15], ["nltk.translate.gleu_score.corpus_gleu", 15], ["nltk.stem.porter.PorterStemmer.NLTK_EXTENSIONS", 15], ["nltk.corpus.reader.wordnet.WordNetError", 15], ["nltk.corpus.abc", 15], ["nltk.classify.decisiontree", 15], ["nltk.translate.chrf_score", 15], ["nltk.metrics.TrigramAssocMeasures", 15], ["nltk.translate.gleu_score.sentence_gleu", 14], ["nltk.compat.unquote_plus", 14], ["nltk.compat.HTTPError", 14], ["nltk.compat.URLError", 14], ["nltk.compat.htmlentitydefs.entitydefs", 14], ["nltk.compat.imap", 14], ["nltk.compat.b", 14], ["nltk.compat.u", 14], ["nltk.compat.HTTPPasswordMgrWithDefaultRealm", 14], ["nltk.compat.ProxyBasicAuthHandler", 14], ["nltk.compat.ProxyDigestAuthHandler", 14], ["nltk.compat.ProxyHandler", 14], ["nltk.compat.build_opener", 14], ["nltk.compat.class_types", 14], ["nltk.compat.getproxies", 14], ["nltk.compat.install_opener", 14], ["nltk.twitter.common.extract_fields", 14], ["nltk.twitter.common.outf_writer_compat", 14], ["nltk.util.ingrams", 14], ["nltk.lm.api.Smoothing", 14], ["nltk.util.pad_sequence", 14], ["nltk.tokenize.SExprTokenizer", 14], ["nltk.tag.simplify.simplify_wsj_tag", 14], ["nltk.stem.porter.PorterStemmer.MARTIN_EXTENSIONS", 14], ["nltk.stem.porter.PorterStemmer.ORIGINAL_ALGORITHM", 14], ["nltk.downloader.Downloader", 14], ["nltk.tag.simplify", 14], ["nltk.wordnet", 14], ["nltk.wordnet.wordnet", 14], ["nltk.corpus.wordnet.wordnet_util", 14], ["nltk.compat.Counter.__init__", 13], ["nltk.re.sub", 13], ["nltk.corpus.framenet.docs", 13], ["nltk.tag.simplify_tag", 13], ["nltk.compat.url2pathname", 13], ["nltk.corpus.treebank.files", 13], ["nltk.compat.binary_type", 13], ["nltk.sem.logic.ANY_TYPE.str", 13], ["nltk.corpus.stopwords.update", 13], ["nltk.sourcedstring.SourcedStringStream", 13], ["nltk.model.api.ModelI", 13], ["nltk.internals.abstract", 13], ["nltk.lm.Laplace", 13], ["nltk.tokenize.punkt.PunktTrainer", 13], ["nltk.sem.relextract.extract_rels", 13], ["nltk.sem.relextract.rtuple", 13], ["nltk.test.tree", 13], ["nltk.book.text1", 13], ["nltk.book.text3", 13], ["nltk.corpus.shakespeare", 13], ["nltk.sourcedstring", 13], ["nltk.model.api", 13], ["nltk.app", 13], ["nltk.corpus.timit", 13], ["nltk.wordnet.wordnet.synsets", 12], ["nltk.corpus.comtrans.aligned_sents", 12], ["nltk.tag.stanford.NERTagger", 12], ["nltk.corpus.framenet.documents", 12], ["nltk.compat.htmlentitydefs.name2codepoint.get", 12], ["nltk.compat.int2byte", 12], ["nltk.compat.unichr", 12], ["nltk.tokenize.sexpr.sexpr_tokenize", 12], ["nltk.tag.simplify_alpino_tag", 12], ["nltk.tag.simplify_brown_tag", 12], ["nltk.tag.simplify_indian_tag", 12], ["nltk.test.doctest_nose_plugin.DoctestFix", 12], ["nltk.corpus.framenet.docs_metadata", 12], ["nltk.util.LazyIteratorList", 12], ["nltk.tag.SennaChunkTagger", 12], ["nltk.tag.SennaNERTagger", 12], ["nltk.tag.stanford.CoreNLPPOSTagger", 12], ["nltk.util.skipgrams", 12], ["nltk.metrics.distance.masi_distance", 12], ["nltk.classify.rte_classify.RTEFeatureExtractor", 12], ["nltk.compat.htmlentitydefs.name2codepoint", 12], ["nltk.test.doctest_nose_plugin", 12], ["nltk.corpus.nonbreaking_prefixes.words", 11], ["nltk.corpus.inaugural.sents", 11], ["nltk.corpus.movie_reviews.sents", 11], ["nltk.corpus.treebank_raw.sents", 11], ["nltk.data.path.insert", 11], ["nltk.corpus.wordnet.langs", 11], ["nltk.stem.util.prefix_replace", 11], ["nltk.metrics.aline.align", 11], ["nltk.metrics.aline.delta", 11], ["nltk.lm.Lidstone", 11], ["nltk.tag.CRFTagger", 11], ["nltk.parse.ProjectiveDependencyParser", 11], ["nltk.corpus.europarl_raw.english", 11], ["nltk.corpus.nonbreaking_prefixes", 11], ["nltk.corpus.treebank_raw", 11], ["nltk.tokenize.destructive", 11], ["nltk.corpus.cess_esp.fileids", 10], ["nltk.six.text_type", 10], ["nltk.tokenize.util.is_cjk", 10], ["nltk.corpus.__getattr__", 10], ["nltk.corpus.verbnet.classids", 10], ["nltk.sentiment.util.extract_unigram_feats", 10], ["nltk.tokenize.util.xml_unescape", 10], ["nltk.parse.TD_STRATEGY", 10], ["nltk.corpus.gutenberg.open", 10], ["nltk.lm.preprocessing.pad_both_ends", 10], ["nltk.tree.bracket_parse", 10], ["nltk.tokenize.BlanklineTokenizer", 10], ["nltk.tag.sequential.ClassifierBasedPOSTagger", 10], ["nltk.tokenize.texttiling.TextTilingTokenizer", 10], ["nltk.model.ngram.NgramModel", 10], ["nltk.stem.arlstem.ARLSTem", 10], ["nltk.probability.LaplaceProbDist", 10], ["nltk.tokenize.texttiling", 10], ["nltk.model.ngram", 10], ["nltk.stem.arlstem", 10], ["nltk.tokenizer", 10], ["nltk.corpus.state_union.words", 9], ["nltk.corpus.toolbox.words", 9], ["nltk.corpus.semcor.tagged_sents", 9], ["nltk.corpus.words.fileids", 9], ["nltk.tag.brill.Template", 9], ["nltk.token.Token", 9], ["nltk.cfg.parse_cfg", 9], ["nltk.translate.chrf_score.sentence_chrf", 9], ["nltk.corpus.gutenberg.paras", 9], ["nltk.translate.nist_score.corpus_nist", 9], ["nltk.lm.api.LanguageModel", 9], ["nltk.tokenize.SyllableTokenizer", 9], ["nltk.chktype.chktype", 9], ["nltk.corpus.stopwords.remove", 9], ["nltk.book.text4", 9], ["nltk.token", 9], ["nltk.chktype", 9], ["nltk.metrics.segmentation", 9], ["nltk.translate.ribes_score", 9], ["nltk.corpora", 9], ["nltk.corpora.chat80", 9], ["nltk.corpus.webtext.sents", 8], ["nltk.tag.sequential.SequentialBackoffTagger.__init__", 8], ["nltk.parse.bracket_parse", 8], ["nltk.stem.snowball.GermanStemmer", 8], ["nltk.re.compile", 8], ["nltk.tree.leaves", 8], ["nltk.corpus.nps_chat.posts", 8], ["nltk.tag._pos_tag", 8], ["nltk.sem.logic.EntityType", 8], ["nltk.classify.rte_classify.rte_features", 8], ["nltk.lm.util.log_base2", 8], ["nltk.lm.smoothing.KneserNey", 8], ["nltk.lm.smoothing.WittenBell", 8], ["nltk.lm.KneserNeyInterpolated", 8], ["nltk.translate.gdfa.grow_diag_final_and", 8], ["nltk.corpus.movie_reviews.readme", 8], ["nltk.corpus.brown.readme", 8], ["nltk.re_show", 8], ["nltk.tokenize.punkt.PunktWordTokenizer", 8], ["nltk.stem.PorterStemmer.stem", 8], ["nltk.corpus.gazetteers", 8], ["nltk.lm.util", 8], ["nltk.translate.gdfa", 8], ["nltk.stem.PorterStemmer", 8], ["nltk.DependencyGraph", 8], ["nltk.corpus.abc.words", 7], ["nltk.corpus.gazetteers.words", 7], ["nltk.collocations.FreqDist", 7], ["nltk.corpus.brown.append", 7], ["nltk.corpus.europarl_raw.english.sents", 7], ["nltk.corpus.nombank.fileids", 7], ["nltk.metrics.TrigramAssocMeasures.likelihood_ratio", 7], ["nltk.corpus.nombank.instances", 7], ["nltk.six.add_metaclass", 7], ["nltk.corpus.stopwords.add", 7], ["nltk.stem.snowball.SpanishStemmer", 7], ["nltk.stem.snowball.DanishStemmer", 7], ["nltk.lm.WittenBellInterpolated", 7], ["nltk.lm.preprocessing.padded_everygrams", 7], ["nltk.tbl.demo", 7], ["nltk.corpus.nombank.nouns", 7], ["nltk.corpus.nombank.rolesets", 7], ["nltk.tokenize.punkt.PunktBaseClass", 7], ["nltk.tokenize.punkt._pair_iter", 7], ["nltk.corpus.VerbnetCorpusReader", 7], ["nltk.tokenize.destructive.NLTKWordTokenizer", 7], ["nltk.parse.EarleyChartParser", 7], ["nltk.book.text2", 7], ["nltk.corpus.europarl_raw.french", 7], ["nltk.Tree", 7], ["nltk.book.FreqDist", 6], ["nltk.corpus.europarl_raw.spanish.sents", 6], ["nltk.corpus.semcor.sents", 6], ["nltk.tokenizer.WhitespaceTokenizer", 6], ["nltk.metrics.TrigramAssocMeasures.chi_sq", 6], ["nltk.corpus.swadesh.entries", 6], ["nltk.lm.preprocessing.flatten", 6], ["nltk.corpus.names.readme", 6], ["nltk.ccg.chart.CCGChartParser", 6], ["nltk.translate.chrf_score.corpus_chrf", 6], ["nltk.tree.label", 6], ["nltk.corpus.verbnet.vnclass", 6], ["nltk.tree.leaf_treeposition", 6], ["nltk.stem.snowball.ItalianStemmer", 6], ["nltk.parse.BottomUpChartParser", 6], ["nltk.sem.chat80.sql_query", 6], ["nltk.__file__", 6], ["nltk.corpus.wordnet.jcn_similarity", 6], ["nltk.classify.util.check_megam_config", 6], ["nltk.corpus.reader.conll.ConllCorpusReader.IGNORE", 6], ["nltk.corpus.reader.conll.ConllCorpusReader.POS", 6], ["nltk.corpus.reader.conll.ConllCorpusReader.WORDS", 6], ["nltk.memoize", 6], ["nltk.text.ConcordanceIndex", 6], ["nltk.metrics.segmentation.windowdiff", 6], ["nltk.stem.cistem.Cistem", 6], ["nltk.tag.hmm.HiddenMarkovModelTagger", 6], ["nltk.cfg.CFG", 6], ["nltk.collocations.QuadgramCollocationFinder", 6], ["nltk.corpus.europarl_raw.spanish", 6], ["nltk.sem.chat80", 6], ["nltk.stem.cistem", 6], ["nltk.tree.transforms", 6], ["nltk.parse.transitionparser", 6], ["nltk.corpus.swadesh.words", 5], ["nltk.corpus.europarl_raw.french.sents", 5], ["nltk.corpus.cess_esp.sents", 5], ["nltk.corpus.shakespeare.fileids", 5], ["nltk.corpus.conll2002.fileids", 5], ["nltk.corpus.state_union.fileids", 5], ["nltk.corpus.swadesh.fileids", 5], ["nltk.tag.NgramTagger.__init__", 5], ["nltk.corpus.nps_chat.tagged_words", 5], ["nltk.corpus.wordnet.ic", 5], ["nltk.corpus.toolbox.entries", 5], ["nltk.corpus.stopwords.__dict__.get", 5], ["nltk.corpus.brown.paras", 5], ["nltk.parse.chart.demo", 5], ["nltk.corpus.reader.util.tagged_treebank_para_block_reader", 5], ["nltk.usage", 5], ["nltk.corpus.semcor.tagged_chunks", 5], ["nltk.tokenize.blankline_tokenize", 5], ["nltk.corpus.wordnet.of2ss", 5], ["nltk.corpus.wordnet.get_version", 5], ["nltk.corpus.reader.wordnet.information_content", 5], ["nltk.tokenize.casual._replace_html_entities", 5], ["nltk.grammar.WeightedGrammar", 5], ["nltk.corpus.reader.conll.ConllCorpusReader.NE", 5], ["nltk.parse.corenlp.CoreNLPServer", 5], ["nltk.tag.brill.nltkdemo18", 5], ["nltk.app.rdparser", 5], ["nltk.tokenize._treebank_word_tokenizer", 5], ["nltk.tag.stanford.POSTagger", 5], ["nltk.ccg.lexicon.ontology", 5], ["nltk.corpus.europarl_raw.german", 5], ["nltk.corpus.stopwords.__dict__", 5], ["nltk.corpus.reader.nombank", 5], ["nltk.util.ngrams.append", 4], ["nltk.corpus.abc.sents", 4], ["nltk.collocations.QuadgramCollocationFinder.from_words", 4], ["nltk.tokenize.casual.TweetTokenizer.__init__", 4], ["nltk.corpus.conll2000.tagged_words", 4], ["nltk.corpus.mac_morpho.tagged_words", 4], ["nltk.corpus.sinica_treebank.tagged_words", 4], ["nltk.corpus.europarl_raw.german.raw", 4], ["nltk.corpus.subjectivity.categories", 4], ["nltk.tree.Tree.chomsky_normal_form", 4], ["nltk.collocations.BigramAssocMeasures.chi_sq", 4], ["nltk.tree.Tree.collapse_unary", 4], ["nltk.collocations.TrigramCollocationFinder.from_documents", 4], ["nltk.Tree.convert", 4], ["nltk.corpus.stopwords.ensure_loaded", 4], ["nltk.corpus.movie_reviews.open", 4], ["nltk.corpus.webtext.open", 4], ["nltk.corpus.reuters.readme", 4], ["nltk.chat.eliza.demo", 4], ["nltk.classify.MaxentClassifier.ALGORITHMS", 4], ["nltk.tokenize.nist.NISTTokenizer", 4], ["nltk.ccg.chart.DefaultRuleSet", 4], ["nltk.corpus.brown.tagged_paras", 4], ["nltk.tokenize.TabTokenizer", 4], ["nltk.tree.pretty_print", 4], ["nltk.tree.subtrees", 4], ["nltk.classify.textcat.TextCat", 4], ["nltk.sentiment.util.extract_bigram_feats", 4], ["nltk.boolean_ops", 4], ["nltk.classify.MultiClassifierI", 4], ["nltk.corpus.wordnet.lin_similarity", 4], ["nltk.corpus.wordnet.res_similarity", 4], ["nltk.tokenize.casual.reduce_lengthening", 4], ["nltk.tokenize.casual.remove_handles", 4], ["nltk.grammar.parse_fcfg", 4], ["nltk.grammar.parse_dependency_grammar", 4], ["nltk.tag.brill.FastBrillTaggerTrainer", 4], ["nltk.tag.brill.ProximateTagsRule", 4], ["nltk.tag.brill.ProximateWordsRule", 4], ["nltk.tag.brill.SymmetricProximateTokensTemplate", 4], ["nltk.stem.WordNetLemmatizer.lemmatize", 4], ["nltk.tag.stanford.CoreNLPNERTagger", 4], ["nltk.corpus.cess_esp._tagset", 4], ["nltk.translate.ribes_score.word_rank_alignment", 4], ["nltk.ccg.lexicon.augParseCategory", 4], ["nltk.sem.logic.InconsistentTypeHierarchyException", 4], ["nltk.parse.corenlp.CoreNLPServerError", 4], ["nltk.util.parallelize_preprocess", 4], ["nltk.util.pairwise", 4], ["nltk.jsontags.JSONTaggedDecoder", 4], ["nltk.jsontags.JSONTaggedEncoder", 4], ["nltk.corpus.reader.pl196x.Pl196xCorpusReader", 4], ["nltk.tokenize.destructive.MacIntyreContractions", 4], ["nltk.chunk.conllstr2tree", 4], ["nltk.sem.clause", 4], ["nltk.download_shell", 4], ["nltk.DependencyGraph._tree_labeled", 4], ["nltk.DependencyGraph.tree_labeled", 4], ["nltk.draw.tree.TreeView", 4], ["nltk.tag.mapping.tagset_mapping", 4], ["nltk.corpus.reader.wordnet.POS_LIST", 4], ["nltk.translate.meteor", 4], ["nltk.corpus.reader.ConllChunkCorpusReader", 4], ["nltk.classify.MaxentClassifier", 4], ["nltk.tokenize.nist", 4], ["nltk.classify.textcat", 4], ["nltk.stem.WordNetLemmatizer", 4], ["nltk.corpus.reader.pl196x", 4], ["nltk.corpus.sentence_polarity", 4], ["nltk.tag.ClassifierBasedPOSTagger", 4], ["nltk.corpus.dependency_treebank", 4], ["nltk.corpus.propbank", 4], ["nltk.corpus.reader.propbank", 4], ["nltk.tree.immutable", 4], ["nltk.etree", 4], ["nltk.etree.ElementTree", 4], ["nltk.corpus.europarl_raw.english.words", 3], ["nltk.corpus.opinion_lexicon.words", 3], ["nltk.corpus.shakespeare.words", 3], ["nltk.parse.dependencygraph.DependencyGraph.load", 3], ["nltk.corpus.sentiwordnet.load", 3], ["nltk.tokenize.load", 3], ["nltk.Valuation.fromstring", 3], ["nltk.corpus.sentiwordnet.synset", 3], ["nltk.classify.maxent.TypedMaxentFeatureEncoding.train", 3], ["nltk.corpus.indian.sents", 3], ["nltk.corpus.sentence_polarity.sents", 3], ["nltk.corpus.mac_morpho.sents", 3], ["nltk.corpus.conll2000.tagged_sents", 3], ["nltk.cfg.Nonterminal", 3], ["nltk.corpus.subjectivity.fileids", 3], ["nltk.stemmer.StemmerI", 3], ["nltk.corpus.reader.api.SyntaxCorpusReader.__init__", 3], ["nltk.corpus.cess_cat.tagged_words", 3], ["nltk.corpus.twitter_samples.raw", 3], ["nltk.corpus.floresta.parsed_sents", 3], ["nltk.cfg.CFG.parse", 3], ["nltk.metrics.QuadgramAssocMeasures.likelihood_ratio", 3], ["nltk.corpus.verbnet.lemmas", 3], ["nltk.parse.generate.demo_grammar", 3], ["nltk.tokenize.casual.WORD_RE.findall", 3], ["nltk.re.findall", 3], ["nltk.corpus.shakespeare.xml", 3], ["nltk.corpus.toolbox.xml", 3], ["nltk.featstruct.Feature", 3], ["nltk.tokenizer.LineTokenizer", 3], ["nltk.tokenize.casual.HANG_RE.sub", 3], ["nltk.corpus.sentiwordnet.get", 3], ["nltk.corpus.reuters.paras", 3], ["nltk.test.chktype", 3], ["nltk.corpus.words.readme", 3], ["nltk.corpus.stopwords.readme", 3], ["nltk.chat.iesha.demo", 3], ["nltk.chat.rude.demo", 3], ["nltk.chat.suntsu.demo", 3], ["nltk.chat.zen.demo", 3], ["nltk.parse.featurechart.demo", 3], ["nltk.re.error", 3], ["nltk.ccg.lexicon.parseLexicon", 3], ["nltk.parse.chart.BU_LC_STRATEGY", 3], ["nltk.parse.BottomUpLeftCornerChartParser", 3], ["nltk.corpus.stopwords.union", 3], ["nltk.corpus.wordnet.ss2of", 3], ["nltk.tokenize.casual.EMOTICON_RE.search", 3], ["nltk.book.text1.concordance", 3], ["nltk.sem.logic.ParseException", 3], ["nltk.sentiment.vader.SentiText", 3], ["nltk.corpus.reader.CHILDESCorpusReader", 3], ["nltk.corpus.wordnet._get_root", 3], ["nltk.corpus.framenet.frame_by_name", 3], ["nltk.ccg.chart.printCCGDerivation", 3], ["nltk.translate.bleu_score._modified_precision", 3], ["nltk.pos_tag.startswith", 3], ["nltk.cfg.CFGProduction", 3], ["nltk.test.cfg", 3], ["nltk.test.parser", 3], ["nltk.test.probability", 3], ["nltk.test.rechunkparser", 3], ["nltk.test.token", 3], ["nltk.test.tokenizer", 3], ["nltk.test.util", 3], ["nltk.PropertyIndirectionI", 3], ["nltk.tokenreader.TokenReaderI", 3], ["nltk.corpora.chat80.make_valuation", 3], ["nltk.corpora.chat80.process_bundle", 3], ["nltk.corpora.chat80.rels", 3], ["nltk.util.acyclic_branches_depth_first", 3], ["nltk.util.acyclic_breadth_first", 3], ["nltk.util.edge_closure", 3], ["nltk.util.edges2dot", 3], ["nltk.lm.smoothing.AbsoluteDiscounting", 3], ["nltk.lm.AbsoluteDiscountingInterpolated", 3], ["nltk.lm.StupidBackoff", 3], ["nltk.translate.ribes_score.corpus_ribes", 3], ["nltk.tokenize.LegalitySyllableTokenizer", 3], ["nltk.corpus.movie_reviews.abspaths", 3], ["nltk.app.chunkparser", 3], ["nltk.book.text3.count", 3], ["nltk.book.text6", 3], ["nltk.parse.transitionparser.Transition", 3], ["nltk.Valuation", 3], ["nltk.classify.maxent.TypedMaxentFeatureEncoding", 3], ["nltk.stemmer", 3], ["nltk.metrics.QuadgramAssocMeasures", 3], ["nltk.tokenize.casual.WORD_RE", 3], ["nltk.tokenize.casual.HANG_RE", 3], ["nltk.pos_tag", 3], ["nltk.tokenreader", 3], ["nltk.corpus.multext_east", 3], ["nltk.corpus.udhr2", 3], ["nltk.corpus.reader.ChunkedCorpusReader.words", 2], ["nltk.corpus.reader.ConllCorpusReader.words", 2], ["nltk.corpus.semcor.words", 2], ["nltk.corpus.cmudict.words", 2], ["nltk.corpus.comtrans.words", 2], ["nltk.translate.bleu_score.ngrams", 2], ["nltk.corpus.words.append", 2], ["nltk.corpus.names.append", 2], ["nltk.classify.svm.SvmClassifier.train", 2], ["nltk.tag.hmm.HiddenMarkovModelTagger.train", 2], ["nltk.classify.PositiveNaiveBayesClassifier.train", 2], ["nltk.NavieBayesClassifier.train", 2], ["nltk.tag.accuracy", 2], ["nltk.classifier.accuracy", 2], ["nltk.corpus.reader.ChunkedCorpusReader.sents", 2], ["nltk.corpus.reader.ConllCorpusReader.sents", 2], ["nltk.corpus.genesis.sents", 2], ["nltk.corpus.stopwords.sents", 2], ["nltk.corpus.reader.ChunkedCorpusReader.tagged_sents", 2], ["nltk.corpus.reader.ConllCorpusReader.tagged_sents", 2], ["nltk.corpus.ptb.tagged_sents", 2], ["nltk.corpus.reader.ChunkedCorpusReader.__init__", 2], ["nltk.corpus.reader.ConllChunkCorpusReader.__init__", 2], ["nltk.stem.isri.ISRIStemmer.__init__", 2], ["nltk.parse.dependencygraph.DependencyGraph.__init__", 2], ["nltk.tag.ClassifierBasedPOSTagger.__init__", 2], ["nltk.probability.FreqDist.__init__", 2], ["nltk.probability.MLEProbDist.__init__", 2], ["nltk.corpus.reader.ChunkedCorpusReader.tagged_words", 2], ["nltk.corpus.reader.ConllCorpusReader.tagged_words", 2], ["nltk.corpus.reader.ChunkedCorpusReader.raw", 2], ["nltk.corpus.reader.ConllCorpusReader.raw", 2], ["nltk.corpus.abc.raw", 2], ["nltk.corpus.stopwords.raw", 2], ["nltk.corpus.reader.ChunkedCorpusReader.chunked_sents", 2], ["nltk.corpus.reader.ConllCorpusReader.chunked_sents", 2], ["nltk.app.wordnet", 2], ["nltk.corpus.reader.ConllCorpusReader.parsed_sents", 2], ["nltk.corpus.dependency_treebank.parsed_sents", 2], ["nltk.tree.transforms.chomsky_normal_form", 2], ["nltk.translate.bleu_score.Fraction", 2], ["nltk.align.ibm1.IBMModel1", 2], ["nltk.tree.transforms.collapse_unary", 2], ["nltk.tree.transforms.un_chomsky_normal_form", 2], ["nltk.corpus.reuters.abspath", 2], ["nltk.corpus.names.abspath", 2], ["nltk.align.ibm2.IBMModel2", 2], ["nltk.corpus.reader.ConllCorpusReader.iob_sents", 2], ["nltk.corpus.verbnet.frames", 2], ["nltk.tree.prettyprinter.TreePrettyPrinter", 2], ["nltk.corpus.propbank.instances", 2], ["nltk.collocations.BigramAssocMeasures.raw_freq", 2], ["nltk.ccg.lexicon.PrimitiveCategory", 2], ["nltk.corpus.stopwords._fileids", 2], ["nltk.ccg.lexicon.CCGVar.reset_id", 2], ["nltk.corpus.sentiwordnet.ensure_loaded", 2], ["nltk.corpus.brown.ensure_loaded", 2], ["nltk.corpus.state_union.files", 2], ["nltk.ccg.chart.insert", 2], ["nltk.corpus.reader.ChunkedCorpusReader.paras", 2], ["nltk.corpus.inaugural.paras", 2], ["nltk.corpus.gutenberg.readme", 2], ["nltk.corpus.wordnet.readme", 2], ["nltk.corpus.reader.ChunkedCorpusReader.tagged_paras", 2], ["nltk.re.search", 2], ["nltk.book.text2.concordance", 2], ["nltk.__version__.startswith", 2], ["nltk.book.text4.count", 2], ["nltk.tag.stanford.StanfordTagger", 2], ["nltk.corpus.stopwords.word", 2], ["nltk.corpus.sentiwordnet.all_senti_synsets", 2], ["nltk.corpus.timit.phones", 2], ["nltk.corpus.timit.spkrinfo", 2], ["nltk.translate.gale_church.align_texts", 2], ["nltk.tokenize.util.spans_to_relative", 2], ["nltk.parse.LeftCornerChartParser", 2], ["nltk.parse.TopDownChartParser", 2], ["nltk.parse.IncrementalBottomUpChartParser", 2], ["nltk.parse.IncrementalBottomUpLeftCornerChartParser", 2], ["nltk.parse.IncrementalLeftCornerChartParser", 2], ["nltk.parse.IncrementalTopDownChartParser", 2], ["nltk.tag.hmm.demo_pos", 2], ["nltk.corpus.reader.ChunkedCorpusReader.chunked_paras", 2], ["nltk.corpus.reader.ChunkedCorpusReader.chunked_words", 2], ["nltk.corpus.reader.ConllCorpusReader.chunked_words", 2], ["nltk.corpus.reader.ConllCorpusReader.iob_words", 2], ["nltk.corpus.reader.ConllCorpusReader.srl_instances", 2], ["nltk.corpus.reader.ConllCorpusReader.srl_spans", 2], ["nltk.re.UNICODE", 2], ["nltk.draw.tree.node", 2], ["nltk.chunk.ChunkParserI.evaluate", 2], ["nltk.tag.HunposTagger", 2], ["nltk.book.text4.index", 2], ["nltk.grammar.StatisticalDependencyGrammar", 2], ["nltk.classify.call_mallet", 2], ["nltk.classify.mallet.config_mallet", 2], ["nltk.internals.convert_regexp_to_nongrouping", 2], ["nltk.tag.ClassifierBasedPOSTagger.feature_detector", 2], ["nltk.corpus.reader.IEERCorpusReader", 2], ["nltk.chunk.named_entity.NEChunkParserTagger", 2], ["nltk.corpus.wordnet.get_members", 2], ["nltk.corpus.wordnet.get_name", 2], ["nltk.corpus.wordnet.get_random_synset", 2], ["nltk.corpus.wordnet.get_subclasses", 2], ["nltk.tag.brill.ProximateTokensTemplate", 2], ["nltk.DiscourseTester", 2], ["nltk.tag.perceptron.AveragedPerceptron", 2], ["nltk.__path__", 2], ["nltk.metrics.segmentation.pk", 2], ["nltk.batch_ne_chunk", 2], ["nltk.sentiment.vader.negated", 2], ["nltk.brill.fntbl37", 2], ["nltk.corpus.reader.propbank.PropbankSplitTreePointer", 2], ["nltk.grammar.read_grammar", 2], ["nltk.grammar.standard_nonterm_parser", 2], ["nltk.ccg.chart.num_leaves", 2], ["nltk.ccg.chart.parses", 2], ["nltk.ccg.chart.select", 2], ["nltk.ccg.lexicon.CCGLexicon", 2], ["nltk.ccg.lexicon.SEMANTICS_RE.match", 2], ["nltk.ccg.lexicon.clone", 2], ["nltk.ccg.lexicon.set_entries", 2], ["nltk.sem.logic.IllegalTypeException", 2], ["nltk.sem.logic.TypeException", 2], ["nltk.sem.logic.TypeResolutionException", 2], ["nltk.grammar._PROBABILITY_RE", 2], ["nltk.tag._get_tagger", 2], ["nltk.sem.logic.ENTITY_TYPE", 2], ["nltk.sem.logic.EVENT_TYPE", 2], ["nltk.sem.logic.VariableBinderExpression", 2], ["nltk.tree.tree.Tree.__repr__", 2], ["nltk.tag.hmm._log_add", 2], ["nltk.tag.Default", 2], ["nltk.tag.Unigram", 2], ["nltk.__author__", 2], ["nltk.__keywords__", 2], ["nltk.__license__", 2], ["nltk.__longdescr__", 2], ["nltk.__maintainer__", 2], ["nltk.__maintainer_email__", 2], ["nltk.__url__", 2], ["nltk.corpus.wordnet.wordnet_util.filter_groups", 2], ["nltk.corpus.wordnet.wordnet_util.group_senses_by_pos", 2], ["nltk.corpus.wordnet.wordnet_util.normalize_groups", 2], ["nltk.corpus.wordnet.wordnet_util.remove_person_name", 2], ["nltk.corpus.wordnet.wordnet_util.reorder_groups", 2], ["nltk.corpus.wordnet.wordnet_util.split_and_clean_norm_entries", 2], ["nltk.corpus.wordnet.wordnet_util.topk_groups", 2], ["nltk.sem.logic.ANY_TYPE.unicode", 2], ["nltk.corpus.reader.nombank.NombankChainTreePointer", 2], ["nltk.corpus.reader.nombank.NombankSplitTreePointer", 2], ["nltk.sentiment.vader.NEGATE", 2], ["nltk.stem.snowball.ArabicStemmer", 2], ["nltk.metrics.interval_distance", 2], ["nltk.tree.Tree.root", 2], ["nltk.corpus.brown.root", 2], ["nltk.NonprojectiveDependencyParser", 2], ["nltk.corpus.reader.CategorizedBracketParseCorpusReader", 2], ["nltk.batch_pos_tag", 2], ["nltk.chunk.regexp.ChunkRule", 2], ["nltk.corpus.brown.encoding", 2], ["nltk.tag.sequential.RegexpTagger", 2], ["nltk.tokenize.sexpr.SExprTokenizer", 2], ["nltk.tokenize.regexp.BlanklineTokenizer", 2], ["nltk.tag.sequential.NgramTagger", 2], ["nltk.tokenize.simple.TabTokenizer", 2], ["nltk.chat.eliza.eliza_chatbot", 2], ["nltk.parse.transitionparser.TransitionParser", 2], ["nltk.tag._POS_TAGGER", 2], ["nltk.probability.ProbDistI", 2], ["nltk.classify.BinaryMaxentFeatureEncoding", 2], ["nltk.lemmer", 2], ["nltk.collocations.AbstractCollocationFinder", 2], ["nltk.classify.svm", 2], ["nltk.classify.svm.SvmClassifier", 2], ["nltk.NavieBayesClassifier", 2], ["nltk.classifier", 2], ["nltk.align.ibm1", 2], ["nltk.align.ibm2", 2], ["nltk.tree.prettyprinter", 2], ["nltk.ccg.lexicon.CCGVar", 2], ["nltk.translate.gale_church", 2], ["nltk.chunk.ChunkParserI", 2], ["nltk.classify.mallet", 2], ["nltk.brill", 2], ["nltk.ccg.lexicon.SEMANTICS_RE", 2], ["nltk.corpus.pros_cons", 2], ["nltk.RegexpTokenizer", 2], ["nltk.metrics.association", 2], ["nltk.tree.parented", 2], ["nltk.lm.models", 2], ["nltk.corpus.product_reviews_1", 2], ["nltk.corpus.reader.framenet", 2], ["nltk.corpus.multext_east.words", 1], ["nltk.corpus.pros_cons.words", 1], ["nltk.corpus.subjectivity.words", 1], ["nltk.corpus.timit.words", 1], ["nltk.corpus.dependency_treebank.words", 1], ["nltk.corpus.masc_tagged.words", 1], ["nltk.help.load", 1], ["nltk.tokenizer.RegexpTokenizer", 1], ["nltk.translate.bleu_score.nltk.translate.bleu_score.sentence_bleu", 1], ["nltk.collocations.ngrams", 1], ["nltk.sem.linearlogic.Expression.fromstring", 1], ["nltk.sem.logic.Type.fromstring", 1], ["nltk.tree.ImmutableParentedTree.fromstring", 1], ["nltk.corpus.movie_reviews.append", 1], ["nltk.bleu.append", 1], ["nltk.corpus.reader.wordnet.synset", 1], ["nltk.word_tokenize.synset", 1], ["nltk.maxent.ConditionalExponentialClassifier.train", 1], ["nltk.classify.BinaryMaxentFeatureEncoding.train", 1], ["nltk.book.bigrams", 1], ["nltk.chunk.util.accuracy", 1], ["nltk.metrics.scores.accuracy", 1], ["nltk.clify.accuracy", 1], ["nltk.corpus.conll2000.sents", 1], ["nltk.corpus.conll2002.sents", 1], ["nltk.corpus.pros_cons.sents", 1], ["nltk.corpus.udhr2.sents", 1], ["nltk.corpus.dependency_treebank.sents", 1], ["nltk.corpus.comtrans.sents", 1], ["nltk.corpus.floresta.sents", 1], ["nltk.corpus.reader.bracket_parse.BracketParseCorpusReader.tagged_sents", 1], ["nltk.corpus.multext_east.tagged_sents", 1], ["nltk.corpus.rte.fileids", 1], ["nltk.corpus.senseval.fileids", 1], ["nltk.corpus.udhr2.fileids", 1], ["nltk.corpus.abc.fileids", 1], ["nltk.corpus.comtrans.fileids", 1], ["nltk.corpus.genesis.fileids", 1], ["nltk.corpus.nps_chat.fileids", 1], ["nltk.corpus.sinica_treebank.fileids", 1], ["nltk.corpus.reader.plaintext.CategorizedPlaintextCorpusReader.__init__", 1], ["nltk.corpus.reader.bracket_parse.BracketParseCorpusReader.__init__", 1], ["nltk.stem.cistem.Cistem.__init__", 1], ["nltk.stem.lancaster.LancasterStemmer.__init__", 1], ["nltk.stem.rslp.RSLPStemmer.__init__", 1], ["nltk.stem.snowball.SnowballStemmer.__init__", 1], ["nltk.stem.wordnet.WordNetLemmatizer.__init__", 1], ["nltk.tag.perceptron.PerceptronTagger.__init__", 1], ["nltk.tag.tnt.TnT.__init__", 1], ["nltk.tokenize.mwe.MWETokenizer.__init__", 1], ["nltk.tokenize.punkt.PunktSentenceTokenizer.__init__", 1], ["nltk.tokenize.regexp.BlanklineTokenizer.__init__", 1], ["nltk.tokenize.regexp.WhitespaceTokenizer.__init__", 1], ["nltk.tokenize.regexp.WordPunctTokenizer.__init__", 1], ["nltk.tokenize.sexpr.SExprTokenizer.__init__", 1], ["nltk.tokenize.simple.LineTokenizer.__init__", 1], ["nltk.tokenize.simple.SpaceTokenizer.__init__", 1], ["nltk.tokenize.simple.TabTokenizer.__init__", 1], ["nltk.tokenize.toktok.ToktokTokenizer.__init__", 1], ["nltk.tokenize.treebank.TreebankWordTokenizer.__init__", 1], ["nltk.tag.sequential.RegexpTagger.__init__", 1], ["nltk.tag.sequential.UnigramTagger.__init__", 1], ["nltk.stem.arlstem.ARLSTem.__init__", 1], ["nltk.tag.sequential.NgramTagger.__init__", 1], ["nltk.tree.tree.Tree.__init__", 1], ["nltk.probability.ConditionalFreqDist.__init__", 1], ["nltk.tree.Tree.__init__", 1], ["nltk.tokenize.RegexpTokenizer.__init__", 1], ["nltk.collocations.AbstractCollocationFinder.__init__", 1], ["nltk.TextCollection.__init__", 1], ["nltk.RegexpTokenizer.__init__", 1], ["nltk.corpus.reader.dependency.DependencyGraph", 1], ["nltk.corpus.multext_east.tagged_words", 1], ["nltk.corpus.cess_esp.tagged_words", 1], ["nltk.corpus.conll2002.tagged_words", 1], ["nltk.corpus.floresta.tagged_words", 1], ["nltk.collections.Counter", 1], ["nltk.wordnet.wordnet.all_synsets", 1], ["nltk.corpus.names.raw", 1], ["nltk.corpus.nps_chat.raw", 1], ["nltk.corpus.udhr2.raw", 1], ["nltk.corpus.indian.raw", 1], ["nltk.corpus.words.raw", 1], ["nltk.corpus.genesis.raw", 1], ["nltk.corpus.sentence_polarity.categories", 1], ["nltk.translate.api.Alignment", 1], ["nltk.tag.sequential.DefaultTagger", 1], ["nltk.parser.stanford.StanfordParser", 1], ["nltk.corpus.brown._unload", 1], ["nltk.chunk.regexp.RegexpChunkRule.parse", 1], ["nltk.translate.ibm1.IBMModel1", 1], ["nltk.collocations.BigramAssocMeasures.pmi", 1], ["nltk.tag._POS_TAGGER.split", 1], ["nltk.corpus.words.split", 1], ["nltk.__version__.split", 1], ["nltk.re.split", 1], ["nltk.corpus.europarl_raw.french.abspath", 1], ["nltk.corpus.gutenberg.abspath", 1], ["nltk.corpus.stopwords.abspath", 1], ["nltk.metrics.association.QuadgramAssocMeasures.likelihood_ratio", 1], ["nltk.collocations.BigramAssocMeasures.likelihood_ratio", 1], ["nltk.corpus.conll2000.iob_sents", 1], ["nltk.classify.senna.Senna", 1], ["nltk.probability.ProbDistI.generate", 1], ["nltk.metrics.TrigramAssocMeasures.raw_freq", 1], ["nltk.cluster.gaac.GAAClusterer", 1], ["nltk.cluster.em.EMClusterer", 1], ["nltk.grammar.FeatDict", 1], ["nltk.tree.Tree.__hash__", 1], ["nltk.book.text4.dispersion_plot", 1], ["nltk.book.text3.dispersion_plot", 1], ["nltk.tree.Tree.convert", 1], ["nltk.tree.parented.ParentedTree", 1], ["nltk.sentiment.util.EMOTICON_RE.findall", 1], ["nltk.book.text3.findall", 1], ["nltk.corpus.rte.xml", 1], ["nltk.corpus.semcor.xml", 1], ["nltk.tag.sequential.AffixTagger", 1], ["nltk.sequential.AffixTagger", 1], ["nltk.corpus.gutenberg.ensure_loaded", 1], ["nltk.corpus.words.ensure_loaded", 1], ["nltk.corpus.words.extend", 1], ["nltk.data.extend", 1], ["nltk.lm.models.Laplace", 1], ["nltk.data.get", 1], ["nltk.tag.senna.SennaChunkTagger", 1], ["nltk.tag.senna.SennaNERTagger", 1], ["nltk.wordnet.wordnet.langs", 1], ["nltk.corpus.brown.open", 1], ["nltk.corpus.treebank.open", 1], ["nltk.corpus.stopwords.open", 1], ["nltk.tag.crf.CRFTagger", 1], ["nltk.lm.models.KneserNeyInterpolated", 1], ["nltk.corpus.inaugural.readme", 1], ["nltk.corpus.words.add", 1], ["nltk.draw.rdparser.demo", 1], ["nltk.draw.srparser.demo", 1], ["nltk.draw.chart.demo", 1], ["nltk.classify.positivenaivebayes.demo", 1], ["nltk.parse.chart.BottomUpChartParser", 1], ["nltk.metrics.__file__", 1], ["nltk.decorators.memoize", 1], ["nltk.corpus.mac_morpho.tagged_paras", 1], ["nltk.lemmer.lemmatize", 1], ["nltk.tokenize.treebank.MacIntyreContractions", 1], ["nltk.chunk.util.conllstr2tree", 1], ["nltk.sem.relextract.clause", 1], ["nltk.parse.chart.BottomUpLeftCornerChartParser", 1], ["nltk.book.text3.concordance", 1], ["nltk.tag.stanford.tag", 1], ["nltk.corpus.stopwords._get_root", 1], ["nltk.book.text6.count", 1], ["nltk.book.text1.count", 1], ["nltk.tokenize.word", 1], ["nltk.corpus.conll2000.chunked_words", 1], ["nltk.corpus.reader.conll.ConllChunkCorpusReader", 1], ["nltk.tag.hunpos.HunposTagger", 1], ["nltk.tag.brill.fntbl37", 1], ["nltk.tree.immutable.ImmutableTree", 1], ["nltk.parse.NonprojectiveDependencyParser", 1], ["nltk.downloader._downloader.is_installed", 1], ["nltk.internals._java_bin", 1], ["nltk.corpus.twitter_samples.string", 1], ["nltk.probability.KneserNeyProbDist", 1], ["nltk.KneserNeyProbDist", 1], ["nltk.chat.iesha.iesha_chatbot", 1], ["nltk.chat.rude.rude_chatbot", 1], ["nltk.chat.suntsu.suntsu_chatbot", 1], ["nltk.chat.zen.zen_chatbot", 1], ["nltk.internals.compile_regexp_to_noncapturing", 1], ["nltk.translate.ribes_score.position_of_ngram", 1], ["nltk.parse.util.taggedsent_to_conll", 1], ["nltk.clean_url", 1], ["nltk.corpus.semcor.chunk_sents", 1], ["nltk.corpus.semcor.chunks", 1], ["nltk.corpus.comparative_sentences.comparisons", 1], ["nltk.corpus.ppattach.attachments", 1], ["nltk.corpus.product_reviews_1.features", 1], ["nltk.corpus.product_reviews_1.reviews", 1], ["nltk.corpus.timit.phone_times", 1], ["nltk.corpus.timit.phone_trees", 1], ["nltk.corpus.timit.play", 1], ["nltk.corpus.timit.sent_times", 1], ["nltk.corpus.timit.sentid", 1], ["nltk.corpus.timit.spkrid", 1], ["nltk.corpus.timit.utteranceids", 1], ["nltk.corpus.timit.word_times", 1], ["nltk.corpus.verbnet.pprint", 1], ["nltk.sem.lfg.FStructure.read_depgraph", 1], ["nltk.sem.relextract.semi_rel2reldict", 1], ["nltk.sem.relextract.tree2semi_rel", 1], ["nltk.tokenize._treebank_word_tokenize", 1], ["nltk.corpus.stopwords.readlines", 1], ["nltk.corpus.reuters.labels", 1], ["nltk.corpus.reuters.load_data", 1], ["nltk.tree._pformat_flat", 1], ["nltk.corpus.wordnet.custom_lemmas", 1], ["nltk.chat.eliza.eliza_chatbot.respond", 1], ["nltk.data.columns.get_loc", 1], ["nltk.corpus.words.copy", 1], ["nltk.data.copy", 1], ["nltk.data.iloc", 1], ["nltk.data.loc", 1], ["nltk.re.MULTILINE", 1], ["nltk.data.dropna", 1], ["nltk.tree.Tree.pos", 1], ["nltk.metrics.BigramAssocMeasures.dice", 1], ["nltk.tokenize.punkt.PunktSentenceTokenizer.PUNCTUATION", 1], ["nltk.corpus.stopwords.to_csv", 1], ["nltk.metrics.agreement.to_csv", 1], ["nltk.book.text1.collocations", 1], ["nltk.book.text3.collocations", 1], ["nltk.book.text1.similar", 1], ["nltk.book.text2.similar", 1], ["nltk.parse.chart.TreeEdge.__str__", 1], ["nltk.parse.chart.TreeEdge.__cmp__", 1], ["nltk.probability.UniformProbDist", 1], ["nltk.tag.api.HiddenMarkovModelTaggerTransformI", 1], ["nltk.collocations.QuadgramAssocMeasures", 1], ["nltk.tree._child_names", 1], ["nltk.corpus.verbenet", 1], ["nltk.corpus.verbnet.frames_for_lemma", 1], ["nltk.parse.stanford.GenericStanfordParser", 1], ["nltk.inference.resolution.ResolutionProverCommand", 1], ["nltk.inference.tableau.TableauProver", 1], ["nltk.sentiment.vader.BOOSTER_DICT", 1], ["nltk.tag.mapping._MAPPINGS", 1], ["nltk.tag.mapping._load_universal_map", 1], ["nltk.tokenize.punkt.PunktLanguageVars.sent_end_chars", 1], ["nltk.tokenize.punkt.PunktSentenceTokenizer.missing_models_message", 1], ["nltk.corpus.reader.framenet.FramenetCorpusReader", 1], ["nltk.stem.snowball.NorwegianStemmer", 1], ["nltk.download_gui", 1], ["nltk.translate.ribes_score.sentence_ribes", 1], ["nltk.corpus.reader.wordlist.MWAPPDBCorpusReader", 1], ["nltk.stem.RSLPSteemer", 1], ["nltk.corpus.reader.NKJPCorpusReader", 1], ["nltk.corpus.reader.bnc.BNCCorpusReader", 1], ["nltk.tag.stanford.POSTagger.parse_output", 1], ["nltk.metrics.association.BigramAssocMeasures.jaccard", 1], ["nltk.metrics.BigramAssocMeasures.jaccard", 1], ["nltk.metrics.TrigramAssocMeasures.jaccard", 1], ["nltk.corpus.wordnet.NOUM", 1], ["nltk.ccg.lexicon.category_semantic_arities", 1], ["nltk.ccg.lexicon.ontology.infer_type", 1], ["nltk.ccg.lexicon.ontology.types", 1], ["nltk.parse.transitionparser.Configuration", 1], ["nltk.parse.transitionparser.Transition.LEFT_ARC", 1], ["nltk.parse.transitionparser.Transition.SHIFT", 1], ["nltk.parse.transitionparser.TransitionParser.ARC_STANDARD", 1], ["nltk.downloader.download_dir", 1], ["nltk.corpus.wordnet._lemma_pos_offset_map", 1], ["nltk.corpus.europarl_raw.italian", 1], ["nltk.sem.evaluate.Error", 1], ["nltk.tgrep.tgrep_compile", 1], ["nltk.tokenize._treebank_word_tokenizer.span_tokenize", 1], ["nltk.RegexpTokenizer.span_tokenize", 1], ["nltk.chunk.named_entity.NEChunkParser", 1], ["nltk.chunk._MULTICLASS_NE_CHUNKER", 1], ["nltk.corpus.reader.IndianCorpusReader", 1], ["nltk.corpus.reader.NPSChatCorpusReader", 1], ["nltk.corpus.reader.SwitchboardCorpusReader", 1], ["nltk.PCFG.EPSILON", 1], ["nltk.probability.LaplaceProbDist.logprob", 1], ["nltk.corpus.reader.util.read_sexpr_block", 1], ["nltk.probability.ConditionalProbDistI", 1], ["nltk.sentiment.vader.allcap_differential", 1], ["nltk.probability.WittenBellProbDist", 1], ["nltk.collocations.BigramAssocMeasures.student_t", 1], ["nltk.tree.productions", 1], ["nltk.tree.treepositions", 1], ["nltk.ccg.lexicon.ontology.get_expr_arity", 1], ["nltk.grammar.parse_pcfg", 1], ["nltk.sem.parse_logic", 1], ["nltk.sem.parse_valuation", 1], ["nltk.grammar.parse_cfg_production", 1], ["nltk.internals.parse_str", 1], ["nltk.featstruct.FeatStructParser", 1], ["nltk.sem.drt.AbstractDrs", 1], ["nltk.corpus.names.read", 1], ["nltk.data._resource_cache", 1], ["nltk.parse.corenlp.try_port", 1], ["nltk.parse.bllip.BllipParser.from_unified_model_dir", 1], ["nltk.tree.parented.MultiParentedTree", 1], ["nltk.tree.immutable.ImmutableMultiParentedTree", 1], ["nltk.tree.immutable.ImmutableParentedTree", 1], ["nltk.tree.immutable.ImmutableProbabilisticTree", 1], ["nltk.internals.Deprecated", 1], ["nltk.etree.ElementTree.SubElement", 1], ["nltk.compat.StringIO.getvalue", 1], ["nltk.compat.StringIO.truncate", 1], ["nltk.compat.reload", 1], ["nltk.draw.util.SequenceWidget", 1], ["nltk.draw.util.SpaceWidget", 1], ["nltk.tag.hmm._NINF", 1], ["nltk.corpus.brown.tagged", 1], ["nltk.corpus.find_corpus_file", 1], ["nltk.etree.ElementTree.ElementTree", 1], ["nltk.etree.ElementTree.Element", 1], ["nltk.etree.ElementTree.iselement", 1], ["nltk.__classifiers__", 1], ["nltk.downloader.build_index", 1], ["nltk.tag.Bigram", 1], ["nltk.tag.Trigram", 1], ["nltk.parse.ChartParse", 1], ["nltk.corpus.reader.ConllSRLInstance", 1], ["nltk.corpus.reader.ConllSRLInstanceList", 1], ["nltk.raise_error", 1], ["nltk.corpus.framenet.frame_relations", 1], ["nltk.util.ngrams.keys", 1], ["nltk.corpus.reader.propbank.PropbankChainTreePointer", 1], ["nltk.corpus.reader.nombank.NombankTreePointer", 1], ["nltk.corpus.reader.propbank.PropbankTreePointer", 1], ["nltk.corpus.NombankCorpusReader", 1], ["nltk.corpus.PropbankCorpusReader", 1], ["nltk.Tree._repr_latex_", 1], ["nltk.Tree.build_display_tree", 1], ["nltk.tree.Tree._repr_png_", 1], ["nltk.Tree._repr_svg_", 1], ["nltk.corpus.reader.sentiwordnet.SentiWordNetCorpusReader", 1], ["nltk.corpus.reader.timit.TimitCorpusReader", 1], ["nltk.downloader.Downloader.INSTALLED", 1], ["nltk.chat.bots", 1], ["nltk.corpus.reader.framenet.AttrDict", 1], ["nltk.tokenize.stanford.CoreNLPTokenizer", 1], ["nltk.data.replace", 1], ["nltk.FreqDist.hapaxes", 1], ["nltk.word_", 1], ["nltk.install", 1], ["nltk.help.brown_tagset", 1], ["nltk.corpus.qc.tuples", 1], ["nltk.DrtGlueReadingCommand", 1], ["nltk.evaluate_sents", 1], ["nltk.interpret_sents", 1], ["nltk.toolbox.to_sfm_string", 1], ["nltk.util.elementtree_indent", 1], ["nltk.app.srparser", 1], ["nltk.parse.FeatureEarleyChartParser", 1], ["nltk.FeatureEarleyChartParser", 1], ["nltk.featstruct.UnificationFailure", 1], ["nltk.book.text1.tokens", 1], ["nltk.book.text2.tokens", 1], ["nltk.book.text5", 1], ["nltk.book.text7", 1], ["nltk.book.text8", 1], ["nltk.book.text9", 1], ["nltk.ccg.chart.ApplicationRuleSet", 1], ["nltk.ccg.chart.CompositionRuleSet", 1], ["nltk.ccg.chart.TypeRaiseRuleSet", 1], ["nltk.corpus.framenet.lu", 1], ["nltk.corpus.propbank.roleset", 1], ["nltk.corpus.propbank.verbs", 1], ["nltk.print_string", 1], ["nltk.book.text3.plot", 1], ["nltk.app.rdparser_app.app", 1], ["nltk.app.srparser_app.app", 1], ["nltk.book.texts", 1], ["nltk.sentiment.util.demo_liu_hu_lexicon", 1], ["nltk.corpus.gutenberg.__dir__", 1], ["nltk.metrics.distance.jaro_similarity", 1], ["nltk.metrics.segmentation.ghd", 1], ["nltk.corpus.stopwords.map", 1], ["nltk.corpus.stopword", 1], ["nltk.corpus.masc_tagged", 1], ["nltk.translate.bleu_score.nltk", 1], ["nltk.translate.bleu_score.nltk.translate", 1], ["nltk.translate.bleu_score.nltk.translate.bleu_score", 1], ["nltk.tree.ImmutableParentedTree", 1], ["nltk.bleu", 1], ["nltk.word_tokenize", 1], ["nltk.maxent", 1], ["nltk.maxent.ConditionalExponentialClassifier", 1], ["nltk.clify", 1], ["nltk.tokenize.RegexpTokenizer", 1], ["nltk.TextCollection", 1], ["nltk.corpus.reader.dependency", 1], ["nltk.collections", 1], ["nltk.parser", 1], ["nltk.parser.stanford", 1], ["nltk.translate.ibm1", 1], ["nltk.metrics.association.QuadgramAssocMeasures", 1], ["nltk.classify.senna", 1], ["nltk.cluster.gaac", 1], ["nltk.cluster.em", 1], ["nltk.sentiment.util.EMOTICON_RE", 1], ["nltk.sequential", 1], ["nltk.tag.crf", 1], ["nltk.draw.rdparser", 1], ["nltk.draw.srparser", 1], ["nltk.draw.chart", 1], ["nltk.classify.positivenaivebayes", 1], ["nltk.decorators", 1], ["nltk.tag.hunpos", 1], ["nltk.downloader._downloader", 1], ["nltk.corpus.comparative_sentences", 1], ["nltk.corpus.ppattach", 1], ["nltk.sem.lfg", 1], ["nltk.sem.lfg.FStructure", 1], ["nltk.data.columns", 1], ["nltk.inference.resolution", 1], ["nltk.inference.tableau", 1], ["nltk.corpus.reader.bnc", 1], ["nltk.metrics.association.BigramAssocMeasures", 1], ["nltk.PCFG", 1], ["nltk.parse.bllip", 1], ["nltk.parse.bllip.BllipParser", 1], ["nltk.corpus.reader.sentiwordnet", 1], ["nltk.FreqDist", 1], ["nltk.corpus.qc", 1], ["nltk.app.rdparser_app", 1], ["nltk.app.srparser_app", 1]]