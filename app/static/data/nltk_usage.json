[["nltk", 60287], ["nltk.corpus", 15226], ["nltk.tokenize", 14953], ["nltk.tokenize.word_tokenize", 8246], ["nltk.corpus.stopwords", 7312], ["nltk.stem", 6831], ["nltk.corpus.stopwords.words", 6609], ["nltk.downloader", 4143], ["nltk.downloader.download", 4128], ["nltk.tag", 3405], ["nltk.tokenize.sent_tokenize", 2927], ["nltk.stem.wordnet.WordNetLemmatizer", 2705], ["nltk.stem.wordnet", 2705], ["nltk.corpus.reader", 2327], ["nltk.stem.porter.PorterStemmer", 2241], ["nltk.stem.porter", 2241], ["nltk.translate", 2153], ["nltk.tag.pos_tag", 2111], ["nltk.translate.bleu_score", 1785], ["nltk.data", 1687], ["nltk.corpus.reader.wordnet", 1674], ["nltk.corpus.wordnet", 1615], ["nltk.probability", 1509], ["nltk.tokenize.regexp", 1407], ["nltk.tree", 1384], ["nltk.stem.snowball", 1365], ["nltk.util", 1294], ["nltk.stem.snowball.SnowballStemmer", 1219], ["nltk.tree.tree.Tree", 1195], ["nltk.tree.tree", 1195], ["nltk.classify", 1091], ["nltk.probability.FreqDist", 1088], ["nltk.sem", 1017], ["nltk.tokenize.regexp.RegexpTokenizer", 1001], ["nltk.data.load", 901], ["nltk.corpus.brown", 849], ["nltk.parse", 824], ["nltk.corpus.wordnet.synsets", 823], ["nltk.sem.logic", 793], ["nltk.chunk", 720], ["nltk.util.ngrams", 703], ["nltk.translate.bleu_score.sentence_bleu", 677], ["nltk.tokenize.casual", 629], ["nltk.tokenize.casual.TweetTokenizer", 567], ["nltk.translate.bleu_score.SmoothingFunction", 521], ["nltk.translate.bleu_score.corpus_bleu", 511], ["nltk.tree.tree.Tree.fromstring", 508], ["nltk.metrics", 499], ["nltk.tokenize.treebank", 468], ["nltk.grammar", 458], ["nltk.sentiment", 452], ["nltk.corpus.reader.wordnet.NOUN", 431], ["nltk.data.path", 416], ["nltk.corpus.reader.wordnet.VERB", 414], ["nltk.sentiment.vader", 412], ["nltk.sentiment.vader.SentimentIntensityAnalyzer", 406], ["nltk.compat", 392], ["nltk.corpus.reader.wordnet.ADJ", 390], ["nltk.classify.naivebayes.NaiveBayesClassifier", 381], ["nltk.classify.naivebayes", 381], ["nltk.corpus.reader.wordnet.ADV", 378], ["nltk.stem.lancaster.LancasterStemmer", 377], ["nltk.stem.lancaster", 377], ["nltk.classify.util", 371], ["nltk.corpus.movie_reviews", 369], ["nltk.classify.naivebayes.NaiveBayesClassifier.train", 359], ["nltk.tag.sequential", 348], ["nltk.data.path.append", 338], ["nltk.corpus.gutenberg", 330], ["nltk.tokenize.treebank.TreebankWordTokenizer", 309], ["nltk.tokenize.regexp.WordPunctTokenizer", 306], ["nltk.data.find", 283], ["nltk.corpus.reuters", 276], ["nltk.internals", 273], ["nltk.classify.util.accuracy", 269], ["nltk.tokenize.wordpunct_tokenize", 269], ["nltk.tokenize.punkt", 267], ["nltk.text", 265], ["nltk.collocations", 261], ["nltk.corpus.treebank", 255], ["nltk.util.bigrams", 252], ["nltk.corpus.wordnet.synset", 246], ["nltk.parse.chart", 245], ["nltk.chunk.regexp", 244], ["nltk.chunk.regexp.RegexpParser", 241], ["nltk.draw", 241], ["nltk.chunk.ne_chunk", 238], ["nltk.text.Text", 237], ["nltk.tag.stanford", 237], ["nltk.metrics.distance", 222], ["nltk.probability.ConditionalFreqDist", 206], ["nltk.corpus.twitter_samples", 206], ["nltk.corpus.brown.sents", 203], ["nltk.tokenize.toktok.ToktokTokenizer", 203], ["nltk.tokenize.toktok", 203], ["nltk.corpus.brown.words", 200], ["nltk.tag.sequential.UnigramTagger", 180], ["nltk.metrics.distance.edit_distance", 178], ["nltk.tokenize.punkt.PunktSentenceTokenizer", 175], ["nltk.grammar.CFG", 170], ["nltk.corpus.brown.tagged_sents", 162], ["nltk.corpus.words", 162], ["nltk.compat.python_2_unicode_compatible", 158], ["nltk.tokenize.treebank.TreebankWordDetokenizer", 158], ["nltk.corpus.reader.api", 158], ["nltk.grammar.CFG.fromstring", 154], ["nltk.corpus.words.words", 150], ["nltk.corpus.names", 148], ["nltk.corpus.twitter_samples.strings", 147], ["nltk.chunk.util", 146], ["nltk.draw.util", 145], ["nltk.tag.sequential.BigramTagger", 132], ["nltk.cluster", 132], ["nltk.corpus.movie_reviews.fileids", 131], ["nltk.metrics.scores", 130], ["nltk.tag.stanford.StanfordNERTagger", 128], ["nltk.corpus.movie_reviews.words", 124], ["nltk.corpus.cmudict", 117], ["nltk.utilities.clean_html", 115], ["nltk.utilities", 115], ["nltk.corpus.gutenberg.words", 110], ["nltk.collocations.BigramCollocationFinder", 110], ["nltk.corpus.names.words", 108], ["nltk.corpus.reader.api.CorpusReader", 108], ["nltk.corpus.treebank.tagged_sents", 105], ["nltk.tokenize.regexp_tokenize", 105], ["nltk.tokenize.moses", 103], ["nltk.corpus.reader.xmldocs", 102], ["nltk.tokenize.regexp.WhitespaceTokenizer", 100], ["nltk.util.trigrams", 100], ["nltk.tree.ParentedTree", 98], ["nltk.parse.chart.ChartParser", 97], ["nltk.cluster.util", 96], ["nltk.collocations.BigramCollocationFinder.from_words", 95], ["nltk.tokenize.api", 94], ["nltk.parse.stanford", 91], ["nltk.corpus.sentiwordnet", 90], ["nltk.corpus.cmudict.dict", 88], ["nltk.tokenize.api.TokenizerI", 88], ["nltk.classify.scikitlearn.SklearnClassifier", 88], ["nltk.classify.scikitlearn", 88], ["nltk.sem.drt", 88], ["nltk.corpus.brown.tagged_words", 86], ["nltk.corpus.reader.util", 86], ["nltk.grammar.Nonterminal", 84], ["nltk.corpus.reader.plaintext", 84], ["nltk.tag.util", 84], ["nltk.corpus.inaugural", 83], ["nltk.classify.maxent", 83], ["nltk.chat", 83], ["nltk.tag.DefaultTagger", 82], ["nltk.inference", 82], ["nltk.corpus.gutenberg.raw", 81], ["nltk.sem.logic.Expression", 81], ["nltk.corpus.webtext", 81], ["nltk.corpus.reuters.fileids", 80], ["nltk.corpus.wordnet.all_synsets", 80], ["nltk.stem.snowball.EnglishStemmer", 80], ["nltk.tag.stanford.StanfordPOSTagger", 80], ["nltk.parse.corenlp", 78], ["nltk.lm", 78], ["nltk.collocations.BigramAssocMeasures", 77], ["nltk.corpus.movie_reviews.categories", 76], ["nltk.parse.dependencygraph", 76], ["nltk.corpus.reader.plaintext.PlaintextCorpusReader", 75], ["nltk.classify.maxent.MaxentClassifier", 75], ["nltk.tag.perceptron", 75], ["nltk.draw.tree", 74], ["nltk.tag.perceptron.PerceptronTagger", 73], ["nltk.tag.RegexpTagger", 72], ["nltk.metrics.BigramAssocMeasures", 72], ["nltk.chunk.util.tree2conlltags", 70], ["nltk.parse.dependencygraph.DependencyGraph", 70], ["nltk.tokenize.moses.MosesDetokenizer", 68], ["nltk.tag.api", 67], ["nltk.corpus.reuters.words", 66], ["nltk.corpus.nps_chat", 66], ["nltk.ccg", 65], ["nltk.cluster.util.cosine_distance", 63], ["nltk.tag.api.TaggerI", 63], ["nltk.tag.mapping", 63], ["nltk.compat.string_types", 62], ["nltk.tag.TrigramTagger", 61], ["nltk.corpus.gutenberg.sents", 60], ["nltk.tag.mapping.map_tag", 60], ["nltk.chunk.util.conlltags2tree", 59], ["nltk.translate.meteor_score", 59], ["nltk.twitter", 59], ["nltk.sem.logic.Type", 58], ["nltk.classify.api.ClassifierI", 58], ["nltk.tokenize.punkt.PunktLanguageVars", 58], ["nltk.classify.api", 58], ["nltk.corpus.reuters.categories", 57], ["nltk.corpus.brown.categories", 57], ["nltk.corpus.wordnet.morphy", 56], ["nltk.sem.logic.ApplicationExpression", 56], ["nltk.corpus.conll2000", 56], ["nltk.help", 55], ["nltk.chat.util", 55], ["nltk.corpus.sentiwordnet.senti_synsets", 54], ["nltk.help.upenn_tagset", 54], ["nltk.corpus.reader.bracket_parse.BracketParseCorpusReader", 54], ["nltk.corpus.state_union", 54], ["nltk.corpus.reader.bracket_parse", 54], ["nltk.corpus.udhr", 54], ["nltk.corpus.gutenberg.fileids", 53], ["nltk.corpus.brown.fileids", 53], ["nltk.parse.stanford.StanfordParser", 53], ["nltk.parse.corenlp.CoreNLPParser", 52], ["nltk.corpus.conll2002", 52], ["nltk.corpus.reader.xmldocs.XMLCorpusReader", 51], ["nltk.book", 51], ["nltk.featstruct", 50], ["nltk.chunk.api.ChunkParserI", 49], ["nltk.classify.util.apply_features", 49], ["nltk.chunk.api", 49], ["nltk.translate.meteor_score.meteor_score", 48], ["nltk.tag.util.untag", 48], ["nltk.probability.ConditionalProbDist", 48], ["nltk.translate.IBMModel", 48], ["nltk.corpus.framenet", 48], ["nltk.parse.featurechart", 48], ["nltk.classify.maxent.MaxentClassifier.train", 47], ["nltk.sem.logic.Variable", 47], ["nltk.corpus.conll2000.chunked_sents", 46], ["nltk.stem.snowball.SnowballStemmer.languages", 46], ["nltk.tree.ParentedTree.fromstring", 45], ["nltk.parse.api.ParserI", 44], ["nltk.tokenize.casual.casual_tokenize", 44], ["nltk.parse.api", 44], ["nltk.corpus.treebank.parsed_sents", 43], ["nltk.metrics.BigramAssocMeasures.chi_sq", 43], ["nltk.probability.MLEProbDist", 43], ["nltk.corpus.opinion_lexicon", 43], ["nltk.corpus.reader.api.CategorizedCorpusReader", 42], ["nltk.corpus.reader.api.CorpusReader.__init__", 41], ["nltk.__version__", 41], ["nltk.tokenize.simple", 41], ["nltk.corpus.wordnet.synset_from_pos_and_offset", 39], ["nltk.draw.util.CanvasFrame", 39], ["nltk.translate.ibm_model", 39], ["nltk.inference.api", 39], ["nltk.corpus.state_union.raw", 38], ["nltk.sem.logic.BasicType", 38], ["nltk.metrics.scores.precision", 38], ["nltk.metrics.scores.recall", 38], ["nltk.corpus.reader.tagged.TaggedCorpusReader", 38], ["nltk.sem.logic.ANY_TYPE", 38], ["nltk.grammar.PCFG", 38], ["nltk.corpus.reader.tagged", 38], ["nltk.sem.logic.Expression.fromstring", 37], ["nltk.parse.stanford.StanfordDependencyParser", 37], ["nltk.internals.config_java", 37], ["nltk.corpus.wordnet.lemma", 37], ["nltk.sem.logic.LogicParser", 37], ["nltk.corpus.genesis", 37], ["nltk.collocations.TrigramAssocMeasures", 36], ["nltk.corpus.reader.conll.ConllCorpusReader", 36], ["nltk.corpus.reader.conll", 36], ["nltk.corpus.webtext.words", 35], ["nltk.corpus.udhr.words", 35], ["nltk.tokenize.moses.MosesTokenizer", 35], ["nltk.corpus.wordnet_ic.ic", 35], ["nltk.tokenize.MWETokenizer", 35], ["nltk.translate.bleu", 35], ["nltk.corpus.reader.xmldocs.XMLCorpusView", 35], ["nltk.corpus.wordnet_ic", 35], ["nltk.corpus.reuters.raw", 34], ["nltk.util.in_idle", 34], ["nltk.probability.DictionaryProbDist", 34], ["nltk.sem.evaluate", 34], ["nltk.corpus.wordnet.path_similarity", 33], ["nltk.corpus.conll2002.iob_sents", 33], ["nltk.grammar.Production", 33], ["nltk.metrics.scores.f_measure", 33], ["nltk.corpus.cess_esp", 33], ["nltk.corpus.genesis.words", 32], ["nltk.corpus.inaugural.words", 32], ["nltk.stem.rslp.RSLPStemmer", 32], ["nltk.parse.RecursiveDescentParser", 32], ["nltk.stem.isri.ISRIStemmer", 32], ["nltk.stem.rslp", 32], ["nltk.stem.isri", 32], ["nltk.tokenize.util", 32], ["nltk.corpus.stopwords.fileids", 31], ["nltk.sem.linearlogic", 31], ["nltk.sem.logic.LambdaExpression", 30], ["nltk.translate.IBMModel.MIN_PROB", 30], ["nltk.tokenize.simple.SpaceTokenizer", 30], ["nltk.corpus.ptb", 30], ["nltk.translate.api", 30], ["nltk.tokenize.stanford", 30], ["nltk.tag.brill", 30], ["nltk.corpus.nps_chat.words", 29], ["nltk.corpus.wordnet.wup_similarity", 29], ["nltk.chat.util.Chat", 29], ["nltk.wsd.lesk", 29], ["nltk.translate.api.AlignedSent", 29], ["nltk.util.Index", 29], ["nltk.tokenize.stanford.StanfordTokenizer", 29], ["nltk.sem.logic.ComplexType", 29], ["nltk.wsd", 29], ["nltk.sentiment.util", 29], ["nltk.grammar.PCFG.fromstring", 28], ["nltk.stem.api.StemmerI", 28], ["nltk.tag.util.str2tuple", 28], ["nltk.parse.load_parser", 28], ["nltk.corpus.reader.ChunkedCorpusReader", 28], ["nltk.tag.tnt", 28], ["nltk.stem.api", 28], ["nltk.probability.ELEProbDist", 27], ["nltk.collocations.TrigramCollocationFinder", 27], ["nltk.parse.util", 27], ["nltk.treetransforms", 27], ["nltk.corpus.sinica_treebank", 27], ["nltk.corpus.europarl_raw", 27], ["nltk.tbl", 27], ["nltk.ccg.combinator", 27], ["nltk.corpus.treebank.tagged_words", 26], ["nltk.chat.util.reflections", 26], ["nltk.tag.tnt.TnT", 26], ["nltk.internals.raise_unorderable_types", 26], ["nltk.draw.util.ShowText", 26], ["nltk.sem.logic.NegatedExpression", 26], ["nltk.stem.regexp.RegexpStemmer", 26], ["nltk.corpus.reader.wordnet.Synset", 26], ["nltk.metrics.confusionmatrix.ConfusionMatrix", 26], ["nltk.translate.Alignment", 26], ["nltk.stem.regexp", 26], ["nltk.metrics.confusionmatrix", 26], ["nltk.corpus.floresta", 26], ["nltk.corpus.indian", 26], ["nltk.corpus.semcor", 26], ["nltk.corpus.inaugural.fileids", 25], ["nltk.corpus.cmudict.entries", 25], ["nltk.classify.util.names_demo", 25], ["nltk.util.LazyMap", 25], ["nltk.sem.logic.AndExpression", 25], ["nltk.metrics.distance.jaccard_distance", 25], ["nltk.translate.gleu_score", 25], ["nltk.tag.hmm", 25], ["nltk.corpus.treebank.sents", 24], ["nltk.corpus.reader.xmldocs.XMLCorpusReader.__init__", 24], ["nltk.corpus.twitter_samples.tokenized", 24], ["nltk.corpus.wordnet.lemmas", 24], ["nltk.util.LazyConcatenation", 24], ["nltk.internals.find_binary", 24], ["nltk.compat.unicode_repr", 24], ["nltk.corpus.util.LazyCorpusLoader", 24], ["nltk.corpus.reader.util.StreamBackedCorpusView", 24], ["nltk.corpus.util", 24], ["nltk.translate.nist_score", 24], ["nltk.lm.preprocessing", 24], ["nltk.inference.prover9", 24], ["nltk.corpus.reader.ConllCorpusReader", 24], ["nltk.corpus.treebank.words", 23], ["nltk.internals.java", 23], ["nltk.corpus.sentiwordnet.senti_synset", 23], ["nltk.parse.util.extract_test_sentences", 23], ["nltk.draw.tree.draw_trees", 23], ["nltk.cluster.kmeans.KMeansClusterer", 23], ["nltk.grammar.FeatureGrammar", 23], ["nltk.cluster.kmeans", 23], ["nltk.parse.pchart", 23], ["nltk.corpus.timit", 23], ["nltk.classify.DecisionTreeClassifier.train", 22], ["nltk.corpus.reuters.sents", 22], ["nltk.compat.Fraction", 22], ["nltk.internals._java_options", 22], ["nltk.corpus.wordnet.all_lemma_names", 22], ["nltk.corpus.wordnet._synset_from_pos_and_offset", 22], ["nltk.sem.logic.AllExpression", 22], ["nltk.sem.logic.EqualityExpression", 22], ["nltk.sem.logic.ExistsExpression", 22], ["nltk.sem.logic.ImpExpression", 22], ["nltk.sem.logic.OrExpression", 22], ["nltk.corpus.reader.util.concat", 22], ["nltk.internals.Counter", 22], ["nltk.corpus.ieer", 22], ["nltk.classify.DecisionTreeClassifier", 22], ["nltk.sem.relextract", 22], ["nltk.metrics.scores.accuracy", 21], ["nltk.corpus.reader.api.CategorizedCorpusReader.__init__", 21], ["nltk.translate.nist_score.sentence_nist", 21], ["nltk.tag.pos_tag_sents", 21], ["nltk.text.TextCollection", 21], ["nltk.tree.ParentedTree.convert", 21], ["nltk.parse.chart.Chart", 21], ["nltk.grammar.nonterminals", 21], ["nltk.cluster.util.VectorSpaceClusterer", 21], ["nltk.sem.drt.DrtExpression", 21], ["nltk.corpus.mac_morpho", 21], ["nltk.collocations.TrigramCollocationFinder.from_words", 20], ["nltk.corpus.opinion_lexicon.negative", 20], ["nltk.sem.logic.ConstantExpression", 20], ["nltk.parse.corenlp.CoreNLPDependencyParser", 20], ["nltk.featstruct.FeatStruct", 20], ["nltk.draw.util.CanvasWidget", 20], ["nltk.corpus.twitter_samples.fileids", 19], ["nltk.defaultdict", 19], ["nltk.sem.logic.unique_variable", 19], ["nltk.corpus.opinion_lexicon.positive", 19], ["nltk.compat.text_type", 19], ["nltk.parse.generate", 19], ["nltk.inference.mace", 19], ["nltk.ccg.api", 19], ["nltk.sem.drt.DrtExpression.fromstring", 18], ["nltk.corpus.webtext.raw", 18], ["nltk.grammar.is_nonterminal", 18], ["nltk.stem.snowball.RussianStemmer", 18], ["nltk.sem.logic.TRUTH_TYPE", 18], ["nltk.compat.PY3", 18], ["nltk.translate.ibm_model.AlignmentInfo", 18], ["nltk.tag.AffixTagger", 18], ["nltk.draw.tree.tree_to_treesegment", 18], ["nltk.parse.malt.MaltParser", 18], ["nltk.parse.featurechart.FeatureChartParser", 18], ["nltk.inference.api.BaseProverCommand", 18], ["nltk.sem.logic.Tokens", 18], ["nltk.parse.malt", 18], ["nltk.corpus.comtrans", 18], ["nltk.re", 18], ["nltk.corpus.stopwords.append", 17], ["nltk.grammar.FeatureGrammar.fromstring", 17], ["nltk.corpus.webtext.fileids", 17], ["nltk.draw.util.TextWidget", 17], ["nltk.tokenize.punkt.PunktParameters", 17], ["nltk.grammar.is_terminal", 17], ["nltk.corpus.wordnet.lch_similarity", 17], ["nltk.corpus.nps_chat.xml_posts", 17], ["nltk.sentiment.util.mark_negation", 17], ["nltk.internals.find_jars_within_path", 17], ["nltk.internals.overridden", 17], ["nltk.util.everygrams", 17], ["nltk.classify.PositiveNaiveBayesClassifier", 17], ["nltk.parse.chart.TreeEdge", 17], ["nltk.corpus.toolbox", 17], ["nltk.tree.Tree", 17], ["nltk.app", 17], ["nltk.corpus.wordnet.words", 16], ["nltk.grammar.DependencyGrammar.fromstring", 16], ["nltk.translate.bleu_score.modified_precision", 16], ["nltk.data.LazyLoader", 16], ["nltk.parse.generate.generate", 16], ["nltk.ne_chunk_sents", 16], ["nltk.data.ZipFilePathPointer", 16], ["nltk.sem.logic.AbstractVariableExpression", 16], ["nltk.sem.logic.VariableExpression", 16], ["nltk.sem.logic.IffExpression", 16], ["nltk.corpus.reader.xmldocs.ElementTree.parse", 16], ["nltk.corpus.verbnet", 16], ["nltk.grammar.DependencyGrammar", 16], ["nltk.corpus.reader.xmldocs.ElementTree", 16], ["nltk.jsontags", 16], ["nltk.corpus.subjectivity", 16], ["nltk.stem.snowball.PorterStemmer", 15], ["nltk.corpus.inaugural.raw", 15], ["nltk.corpus.brown.raw", 15], ["nltk.corpus.ieer.parsed_docs", 15], ["nltk.corpus.wordnet.lemma_from_key", 15], ["nltk.treetransforms.chomsky_normal_form", 15], ["nltk.internals.deprecated", 15], ["nltk.translate.ibm_model.Counts", 15], ["nltk.lm.MLE", 15], ["nltk.draw.tree.TreeSegmentWidget", 15], ["nltk.chunk.util.ChunkScore", 15], ["nltk.metrics.agreement", 15], ["nltk.corpus.cess_cat", 15], ["nltk.corpus.swadesh", 15], ["nltk.sem.drt.DrtTokens", 15], ["nltk.corpus.cess_esp.words", 14], ["nltk.corpus.treebank.fileids", 14], ["nltk.sem.logic.ComplexType.__hash__", 14], ["nltk.internals.find_file", 14], ["nltk.parse.pchart.InsideChartParser", 14], ["nltk.parse.viterbi.ViterbiParser", 14], ["nltk.metrics.agreement.AnnotationTask", 14], ["nltk.parse.viterbi", 14], ["nltk.corpus.rte", 14], ["nltk.corpus.alpino", 14], ["nltk.tgrep", 14], ["nltk.corpus.wordnet.wordnet_util", 14], ["nltk.corpus.movie_reviews.raw", 13], ["nltk.corpus.reader.xmldocs.XMLCorpusView.__init__", 13], ["nltk.corpus.comtrans.aligned_sents", 13], ["nltk.classify.decisiontree.DecisionTreeClassifier", 13], ["nltk.classify.maxent.MaxentClassifier.__doc__", 13], ["nltk.translate.gleu_score.sentence_gleu", 13], ["nltk.corpus.stopwords.update", 13], ["nltk.corpus.reader.wordnet.WordNetCorpusReader", 13], ["nltk.sem.evaluate.Valuation", 13], ["nltk.sem.drt.DrtParser", 13], ["nltk.classify.decisiontree", 13], ["nltk.classify.rte_classify", 13], ["nltk.classify.megam", 13], ["nltk.corpus.floresta.words", 12], ["nltk.translate.bleu_score.brevity_penalty", 12], ["nltk.translate.bleu_score.closest_ref_length", 12], ["nltk.corpus.rte.pairs", 12], ["nltk.translate.gleu_score.corpus_gleu", 12], ["nltk.chunk.tagstr2tree", 12], ["nltk.data.show_cfg", 12], ["nltk.sem.logic.ANY_TYPE.str", 12], ["nltk.sem.logic.is_indvar", 12], ["nltk.internals.find_jar", 12], ["nltk.translate.IBMModel1", 12], ["nltk.lm.preprocessing.padded_everygram_pipeline", 12], ["nltk.tag.stanford.CoreNLPPOSTagger", 12], ["nltk.probability.LidstoneProbDist", 12], ["nltk.draw.tree.TreeWidget", 12], ["nltk.util.OrderedDict", 12], ["nltk.inference.mace.Mace", 12], ["nltk.tag.hmm.HiddenMarkovModelTrainer", 12], ["nltk.tag.sequential.ClassifierBasedTagger", 12], ["nltk.tree.ProbabilisticTree", 12], ["nltk.inference.prover9.Prover9", 12], ["nltk.book.text1", 12], ["nltk.util.Trie", 12], ["nltk.tbl.Template", 12], ["nltk.translate.IBMModel4", 12], ["nltk.corpus.abc", 12], ["nltk.sem.cooper_storage", 12], ["nltk.classify.tadm", 12], ["nltk.twitter.common", 12], ["nltk.twitter.api", 12], ["nltk.corpus.alpino.words", 11], ["nltk.corpus.indian.tagged_sents", 11], ["nltk.corpus.conll2002.chunked_sents", 11], ["nltk.corpus.ptb.parsed_sents", 11], ["nltk.translate.meteor_score.single_meteor_score", 11], ["nltk.tokenize.util.string_span_tokenize", 11], ["nltk.downloader.Downloader", 11], ["nltk.treeprettyprinter.TreePrettyPrinter", 11], ["nltk.draw.CFGEditor", 11], ["nltk.draw.util.EntryDialog", 11], ["nltk.collocations.BigramCollocationFinder.from_documents", 11], ["nltk.jsontags.register_tag", 11], ["nltk.tokenize.SExprTokenizer", 11], ["nltk.parse.ProjectiveDependencyParser", 11], ["nltk.parse.ShiftReduceParser", 11], ["nltk.tag.brill_trainer.BrillTaggerTrainer", 11], ["nltk.tokenize.simple.LineTokenizer", 11], ["nltk.tag.sequential.SequentialBackoffTagger", 11], ["nltk.book.text3", 11], ["nltk.tokenize.sexpr", 11], ["nltk.corpus.shakespeare", 11], ["nltk.treeprettyprinter", 11], ["nltk.tag.brill_trainer", 11], ["nltk.twitter.util", 11], ["nltk.corpus.lin_thesaurus", 11], ["nltk.corpus.indian.words", 10], ["nltk.corpus.subjectivity.sents", 10], ["nltk.corpus.mac_morpho.tagged_sents", 10], ["nltk.corpus.sinica_treebank.parsed_sents", 10], ["nltk.re.sub", 10], ["nltk.sentiment.SentimentAnalyzer", 10], ["nltk.metrics.BigramAssocMeasures.likelihood_ratio", 10], ["nltk.corpus.wordnet.langs", 10], ["nltk.internals.ElementWrapper", 10], ["nltk.sem.logic.LogicalExpressionException", 10], ["nltk.data.PathPointer", 10], ["nltk.parse.chart.LeafEdge", 10], ["nltk.corpus.framenet.frames", 10], ["nltk.metrics.BigramAssocMeasures.pmi", 10], ["nltk.compat.total_ordering", 10], ["nltk.tree.bracket_parse", 10], ["nltk.util.skipgrams", 10], ["nltk.sem.relextract.rtuple", 10], ["nltk.sem.evaluate.Assignment", 10], ["nltk.sem.evaluate.Model", 10], ["nltk.util.tokenwrap", 10], ["nltk.util.flatten", 10], ["nltk.probability.ProbabilisticMixIn", 10], ["nltk.tag.senna", 10], ["nltk.ccg.chart", 10], ["nltk.corpus.toolbox.words", 9], ["nltk.corpus.semcor.tagged_sents", 9], ["nltk.corpus.treebank_chunk.chunked_sents", 9], ["nltk.corpus.reader.util.StreamBackedCorpusView.__init__", 9], ["nltk.cluster.util.VectorSpaceClusterer.__init__", 9], ["nltk.inference.api.BaseProverCommand.__init__", 9], ["nltk.corpus.wordnet._morphy", 9], ["nltk.tokenize.punkt.PunktTrainer", 9], ["nltk.corpus.wordnet.ADJ_SAT", 9], ["nltk.tokenize.sexpr.sexpr_tokenize", 9], ["nltk.tree.Tree.parse", 9], ["nltk.corpus.__getattr__", 9], ["nltk.parse.chart.BottomUpPredictCombineRule", 9], ["nltk.parse.chart.BottomUpPredictRule", 9], ["nltk.parse.chart.LeafInitRule", 9], ["nltk.parse.chart.SingleEdgeFundamentalRule", 9], ["nltk.parse.chart.TopDownInitRule", 9], ["nltk.parse.chart.EdgeI", 9], ["nltk.inference.api.Prover", 9], ["nltk.sem.logic.IndividualVariableExpression", 9], ["nltk.sem.drt.DrtVariableExpression", 9], ["nltk.corpus.stopwords.remove", 9], ["nltk.corpus.reader.wordnet.WordNetError", 9], ["nltk.sem.relextract.extract_rels", 9], ["nltk.cluster.util.euclidean_distance", 9], ["nltk.tag.CRFTagger", 9], ["nltk.corpus.reader.plaintext.CategorizedPlaintextCorpusReader", 9], ["nltk.tag.NgramTagger", 9], ["nltk.tag.brill.Pos", 9], ["nltk.book.text4", 9], ["nltk.twitter.api.TweetHandlerI", 9], ["nltk.corpus.treebank_chunk", 9], ["nltk.ccg.lexicon", 9], ["nltk.toolbox", 9], ["nltk.tokenize.casual.EMOTICON_RE", 9], ["nltk.corpus.state_union.words", 8], ["nltk.corpus.udhr.fileids", 8], ["nltk.corpus.udhr.raw", 8], ["nltk.parse.bracket_parse", 8], ["nltk.corpus.nps_chat.posts", 8], ["nltk.grammar.FeatStructNonterminal", 8], ["nltk.featstruct.TYPE", 8], ["nltk.data.FileSystemPathPointer", 8], ["nltk.corpus.framenet.frame", 8], ["nltk.lm.preprocessing.pad_both_ends", 8], ["nltk.re_show", 8], ["nltk.tag.senna.SennaTagger", 8], ["nltk.classify.rte_classify.RTEFeatureExtractor", 8], ["nltk.parse.EarleyChartParser", 8], ["nltk.tokenize.stanford_segmenter.StanfordSegmenter", 8], ["nltk.tag.util.tuple2str", 8], ["nltk.twitter.util.credsfromfile", 8], ["nltk.corpus.reader.api.SyntaxCorpusReader", 8], ["nltk.tag.brill.Word", 8], ["nltk.probability.ImmutableProbabilisticMixIn", 8], ["nltk.corpus.europarl_raw.english", 8], ["nltk.corpus.gazetteers", 8], ["nltk.tokenize.stanford_segmenter", 8], ["nltk.corpus.senseval", 8], ["nltk.wordnet", 8], ["nltk.wordnet.wordnet", 8], ["nltk.metrics.TrigramAssocMeasures", 8], ["nltk.translate.chrf_score", 8], ["nltk.sem.chat80", 8], ["nltk.DependencyGraph", 8], ["nltk.tree.transforms", 8], ["nltk.corpus.gazetteers.words", 7], ["nltk.chunk.accuracy", 7], ["nltk.corpus.webtext.sents", 7], ["nltk.corpus.semcor.sents", 7], ["nltk.corpus.treebank_raw.sents", 7], ["nltk.corpus.cess_esp.tagged_sents", 7], ["nltk.corpus.names.fileids", 7], ["nltk.corpus.reader.tagged.TaggedCorpusReader.__init__", 7], ["nltk.corpus.reader.util.read_line_block", 7], ["nltk.data.path.insert", 7], ["nltk.corpus.gutenberg.paras", 7], ["nltk.tokenize.util.align_tokens", 7], ["nltk.corpus.stopwords.add", 7], ["nltk.classify.util.log_likelihood", 7], ["nltk.corpus.senseval.instances", 7], ["nltk.tag._pos_tag", 7], ["nltk.tokenize.BlanklineTokenizer", 7], ["nltk.tag.stanford.NERTagger", 7], ["nltk.sem.logic.EntityType", 7], ["nltk.lm.Vocabulary", 7], ["nltk.internals.slice_bounds", 7], ["nltk.ccg.api.FunctionalCategory", 7], ["nltk.classify.util.binary_names_demo_features", 7], ["nltk.corpus.framenet.frames_by_lemma", 7], ["nltk.internals.find_jar_iter", 7], ["nltk.internals.find_dir", 7], ["nltk.corpus.twitter_samples.abspath", 7], ["nltk.translate.IBMModel2", 7], ["nltk.translate.IBMModel3", 7], ["nltk.tokenize.util.regexp_span_tokenize", 7], ["nltk.stem.snowball.DanishStemmer", 7], ["nltk.corpus.VerbnetCorpusReader", 7], ["nltk.lm.Laplace", 7], ["nltk.corpus.gutenberg.open", 7], ["nltk.compat.xrange", 7], ["nltk.probability.SimpleGoodTuringProbDist", 7], ["nltk.metrics.distance.binary_distance", 7], ["nltk.cfg.parse_cfg", 7], ["nltk.metrics.distance.masi_distance", 7], ["nltk.inference.mace.MaceCommand", 7], ["nltk.tag.sequential.ClassifierBasedPOSTagger", 7], ["nltk.tokenize.texttiling.TextTilingTokenizer", 7], ["nltk.compat.Counter", 7], ["nltk.compat.StringIO", 7], ["nltk.tree.ImmutableTree", 7], ["nltk.corpus.europarl_raw.french", 7], ["nltk.corpus.treebank_raw", 7], ["nltk.cfg", 7], ["nltk.tokenize.texttiling", 7], ["nltk.model", 7], ["nltk.Tree", 7], ["nltk.chat.eliza", 7], ["nltk.translate.stack_decoder", 7], ["nltk.corpus.abc.words", 6], ["nltk.corpus.cess_cat.words", 6], ["nltk.book.FreqDist", 6], ["nltk.wordnet.wordnet.synsets", 6], ["nltk.ccg.lexicon.fromstring", 6], ["nltk.translate.Alignment.fromstring", 6], ["nltk.corpus.europarl_raw.english.sents", 6], ["nltk.corpus.europarl_raw.spanish.sents", 6], ["nltk.corpus.movie_reviews.sents", 6], ["nltk.corpus.cess_cat.tagged_sents", 6], ["nltk.corpus.floresta.tagged_sents", 6], ["nltk.corpus.ieer.fileids", 6], ["nltk.corpus.ptb.fileids", 6], ["nltk.corpus.nps_chat.tagged_words", 6], ["nltk.metrics.TrigramAssocMeasures.chi_sq", 6], ["nltk.parse.chart.TreeEdge.__init__", 6], ["nltk.sem.logic.LogicParser.__init__", 6], ["nltk.translate.chrf_score.sentence_chrf", 6], ["nltk.corpus.verbnet.classids", 6], ["nltk.sem.logic._counter._value", 6], ["nltk.util.unique_list", 6], ["nltk.stem.snowball.FrenchStemmer", 6], ["nltk.parse.BottomUpChartParser", 6], ["nltk.grammar.toy_pcfg2", 6], ["nltk.boolean_ops", 6], ["nltk.sem.chat80.sql_query", 6], ["nltk.corpus.reader.util.read_blankline_block", 6], ["nltk.sentiment.util.extract_unigram_feats", 6], ["nltk.corpus.perluniprops.chars", 6], ["nltk.corpus.framenet.lus", 6], ["nltk.treetransforms.collapse_unary", 6], ["nltk.treetransforms.un_chomsky_normal_form", 6], ["nltk.draw.util.ColorizedList", 6], ["nltk.draw.util.SymbolWidget.SYMBOLS", 6], ["nltk.parse.chart.AbstractChartRule", 6], ["nltk.corpus.reader.util.find_corpus_fileids", 6], ["nltk.corpus.reader.xmldocs.XMLCorpusView.read_block", 6], ["nltk.toolbox.ToolboxData", 6], ["nltk.data.SeekableUnicodeStreamReader", 6], ["nltk.corpus.wordnet._unload", 6], ["nltk.inference.prover9.Prover9Command", 6], ["nltk.sem.glue.DrtGlue", 6], ["nltk.sem.logic.BooleanExpression", 6], ["nltk.sem.logic.FunctionVariableExpression", 6], ["nltk.parse.chart.CachedTopDownPredictRule", 6], ["nltk.parse.chart.EmptyPredictRule", 6], ["nltk.parse.featurechart.FeatureChart", 6], ["nltk.parse.dependencygraph.conll_data2.split", 6], ["nltk.sem.cooper_storage.CooperStore", 6], ["nltk.sem.cooper_storage.parse_with_bindops", 6], ["nltk.sem.logic.APP", 6], ["nltk.util.Trie.LEAF", 6], ["nltk.translate.IBMModel4.model4_prob_t_a_given_s", 6], ["nltk.tokenize.api.StringTokenizer", 6], ["nltk.translate.ibm_model.longest_target_sentence_length", 6], ["nltk.corpus.reader.conll.ConllCorpusReader.IGNORE", 6], ["nltk.corpus.reader.conll.ConllCorpusReader.POS", 6], ["nltk.corpus.reader.conll.ConllCorpusReader.WORDS", 6], ["nltk.compat.izip", 6], ["nltk.tokenize.punkt.PunktWordTokenizer", 6], ["nltk.stem.PorterStemmer.stem", 6], ["nltk.text.ConcordanceIndex", 6], ["nltk.cluster.gaac.GAAClusterer", 6], ["nltk.metrics.windowdiff", 6], ["nltk.sem.skolemize.skolemize", 6], ["nltk.tbl.feature.Feature", 6], ["nltk.model.ngram.NgramModel", 6], ["nltk.stem.arlstem.ARLSTem", 6], ["nltk.ccg.api.CCGVar", 6], ["nltk.inference.api.BaseModelBuilderCommand", 6], ["nltk.translate.IBMModel5", 6], ["nltk.translate.StackDecoder", 6], ["nltk.collocations.QuadgramCollocationFinder", 6], ["nltk.corpus.europarl_raw.spanish", 6], ["nltk.sem.logic._counter", 6], ["nltk.corpus.perluniprops", 6], ["nltk.draw.util.SymbolWidget", 6], ["nltk.sem.glue", 6], ["nltk.parse.dependencygraph.conll_data2", 6], ["nltk.stem.PorterStemmer", 6], ["nltk.cluster.gaac", 6], ["nltk.sem.skolemize", 6], ["nltk.tbl.feature", 6], ["nltk.model.ngram", 6], ["nltk.stem.arlstem", 6], ["nltk.corpus.conll2007", 6], ["nltk.parse.transitionparser", 6], ["nltk.corpus.swadesh.words", 5], ["nltk.Valuation.fromstring", 5], ["nltk.corpus.europarl_raw.french.sents", 5], ["nltk.corpus.inaugural.sents", 5], ["nltk.corpus.sinica_treebank.sents", 5], ["nltk.corpus.words.fileids", 5], ["nltk.corpus.conll2002.fileids", 5], ["nltk.corpus.swadesh.fileids", 5], ["nltk.draw.util.CanvasWidget.__init__", 5], ["nltk.tag.sequential.SequentialBackoffTagger.__init__", 5], ["nltk.probability.ProbabilisticMixIn.__init__", 5], ["nltk.corpus.swadesh.entries", 5], ["nltk.corpus.toolbox.entries", 5], ["nltk.draw.util.BoxWidget", 5], ["nltk.draw.util.CanvasWidget.__getitem__", 5], ["nltk.draw.util.CanvasWidget.__setitem__", 5], ["nltk.draw.util.OvalWidget", 5], ["nltk.draw.util.ParenWidget", 5], ["nltk.corpus.stopwords.extend", 5], ["nltk.corpus.wordnet.ensure_loaded", 5], ["nltk.tree.leaves", 5], ["nltk.probability.sum_logs", 5], ["nltk.classify.util.names_demo_features", 5], ["nltk.corpus.semcor.tagged_chunks", 5], ["nltk.featstruct.FeatStructReader", 5], ["nltk.parse.chart.demo", 5], ["nltk.util.AbstractLazySequence", 5], ["nltk.corpus.reader.wordnet.information_content", 5], ["nltk.tokenize.casual.EMOTICON_RE.findall", 5], ["nltk.induce_pcfg", 5], ["nltk.lm.NgramCounter", 5], ["nltk.corpus.lin_thesaurus.scored_synonyms", 5], ["nltk.classify.Senna", 5], ["nltk.twitter.Query", 5], ["nltk.lm.Lidstone", 5], ["nltk.corpus.reader.conll.ConllCorpusReader.NE", 5], ["nltk.app.rdparser", 5], ["nltk.stem.porter.PorterStemmer.ORIGINAL_ALGORITHM", 5], ["nltk.stem.porter.PorterStemmer.MARTIN_EXTENSIONS", 5], ["nltk.metrics.spearman_correlation", 5], ["nltk.chunk.tree2conllstr", 5], ["nltk.corpus.reader.WordListCorpusReader", 5], ["nltk.probability.DictionaryConditionalProbDist", 5], ["nltk.book.text2", 5], ["nltk.corpus.europarl_raw.german", 5], ["nltk.Valuation", 5], ["nltk.tokenize.destructive", 5], ["nltk.chat.iesha", 5], ["nltk.chat.rude", 5], ["nltk.chat.suntsu", 5], ["nltk.chat.zen", 5], ["nltk.stem.util", 5], ["nltk.corpus.reader.nombank", 5], ["nltk.corpus.nonbreaking_prefixes.words", 4], ["nltk.corpus.mac_morpho.words", 4], ["nltk.corpus.machado.words", 4], ["nltk.corpus.sinica_treebank.words", 4], ["nltk.corpus.brown.append", 4], ["nltk.util.ngrams.append", 4], ["nltk.corpus.abc.sents", 4], ["nltk.corpus.conll2000.tagged_sents", 4], ["nltk.corpus.shakespeare.fileids", 4], ["nltk.collocations.QuadgramCollocationFinder.from_words", 4], ["nltk.corpus.floresta.tagged_words", 4], ["nltk.corpus.indian.tagged_words", 4], ["nltk.corpus.sinica_treebank.tagged_words", 4], ["nltk.corpus.europarl_raw.german.raw", 4], ["nltk.collocations.BigramAssocMeasures.chi_sq", 4], ["nltk.probability.ImmutableProbabilisticMixIn.__init__", 4], ["nltk.Tree.convert", 4], ["nltk.featstruct.FeatStruct.__hash__", 4], ["nltk.corpus.brown.paras", 4], ["nltk.util.slice_bounds", 4], ["nltk.corpus.movie_reviews.open", 4], ["nltk.re.compile", 4], ["nltk.tokenize.nist.NISTTokenizer", 4], ["nltk.corpus.reader.util.tagged_treebank_para_block_reader", 4], ["nltk.config_megam", 4], ["nltk.tree.label", 4], ["nltk.classify.megam.call_megam", 4], ["nltk.classify.megam.parse_megam_weights", 4], ["nltk.classify.megam.write_megam_file", 4], ["nltk.classify.tadm.call_tadm", 4], ["nltk.classify.tadm.parse_tadm_weights", 4], ["nltk.classify.tadm.write_tadm_file", 4], ["nltk.classify.util.CutoffChecker", 4], ["nltk.data.gzip_open_unicode", 4], ["nltk.corpus.nps_chat.tagged_posts", 4], ["nltk.corpus.brown.tagged_paras", 4], ["nltk.corpus.timit.phones", 4], ["nltk.corpus.timit.spkrinfo", 4], ["nltk.LaplaceProbDist", 4], ["nltk.stem.snowball.ItalianStemmer", 4], ["nltk.tokenize.blankline_tokenize", 4], ["nltk.__file__", 4], ["nltk.corpus.wordnet.jcn_similarity", 4], ["nltk.corpus.wordnet.lin_similarity", 4], ["nltk.corpus.wordnet.res_similarity", 4], ["nltk.corpus.wordnet.get_version", 4], ["nltk.stem.WordNetLemmatizer.lemmatize", 4], ["nltk.DiscourseTester", 4], ["nltk.metrics.BigramAssocMeasures.raw_freq", 4], ["nltk.draw.table.Table", 4], ["nltk.internals.is_writable", 4], ["nltk.featstruct.FeatDict", 4], ["nltk.featstruct.SLASH", 4], ["nltk.util.invert_graph", 4], ["nltk.util.transitive_closure", 4], ["nltk.parse.SteppingRecursiveDescentParser", 4], ["nltk.parse.SteppingShiftReduceParser", 4], ["nltk.classify.util.partial_names_demo", 4], ["nltk.corpus.reader.util.read_alignedsent_block", 4], ["nltk.chunk.ieerstr2tree", 4], ["nltk.tree.sinica_parse", 4], ["nltk.tokenize.line_tokenize", 4], ["nltk.corpus.reader.bracket_parse.BracketParseCorpusReader._parse", 4], ["nltk.sem.logic.BinaryExpression", 4], ["nltk.sem.logic.skolem_function", 4], ["nltk.probability.MutableProbDist", 4], ["nltk.tag.api.FeaturesetTaggerI", 4], ["nltk.tag.brill.brill24", 4], ["nltk.twitter.common.json2csv", 4], ["nltk.twitter.common.json2csv_entities", 4], ["nltk.tgrep.tgrep_nodes", 4], ["nltk.translate.PhraseTable", 4], ["nltk.twitter.Streamer", 4], ["nltk.twitter.TweetViewer", 4], ["nltk.twitter.TweetWriter", 4], ["nltk.twitter.Twitter", 4], ["nltk.stem.snowball.SpanishStemmer", 4], ["nltk.stem.cistem.Cistem", 4], ["nltk.pos_tag.startswith", 4], ["nltk.util.pad_sequence", 4], ["nltk.parse.TD_STRATEGY", 4], ["nltk.memoize", 4], ["nltk.corpus.brown.readme", 4], ["nltk.corpus.reuters.readme", 4], ["nltk.corpus.names.readme", 4], ["nltk.corpus.movie_reviews.readme", 4], ["nltk.sem.clause", 4], ["nltk.DependencyGraph._tree_labeled", 4], ["nltk.DependencyGraph.tree_labeled", 4], ["nltk.draw.tree.TreeView", 4], ["nltk.translate.meteor", 4], ["nltk.tokenize.destructive.NLTKWordTokenizer", 4], ["nltk.corpus.reader.wordnet.POS_LIST", 4], ["nltk.sem.linearlogic.Expression", 4], ["nltk.tokenize._treebank_word_tokenizer", 4], ["nltk.tag.stanford.POSTagger", 4], ["nltk.corpus.reader.ConllChunkCorpusReader", 4], ["nltk.corpus.nonbreaking_prefixes", 4], ["nltk.corpus.machado", 4], ["nltk.tokenize.nist", 4], ["nltk.stem.WordNetLemmatizer", 4], ["nltk.draw.table", 4], ["nltk.stem.cistem", 4], ["nltk.pos_tag", 4], ["nltk.corpus.sentence_polarity", 4], ["nltk.corpus.reader.timit", 4], ["nltk.corpus.dependency_treebank", 4], ["nltk.align", 4], ["nltk.corpus.propbank", 4], ["nltk.lm.api", 4], ["nltk.metrics.aline", 4], ["nltk.translate.ribes_score", 4], ["nltk.corpus.reader.propbank", 4], ["nltk.corpus.nombank", 4], ["nltk.tree.immutable", 4], ["nltk.corpus.opinion_lexicon.words", 3], ["nltk.corpus.ptb.words", 3], ["nltk.corpus.sentiwordnet.load", 3], ["nltk.tokenize.load", 3], ["nltk.translate.bleu_score.ngrams", 3], ["nltk.chunk.regexp.RegexpChunkRule.fromstring", 3], ["nltk.corpus.sentiwordnet.synset", 3], ["nltk.classify.maxent.TadmEventMaxentFeatureEncoding.train", 3], ["nltk.classify.maxent.TadmMaxentClassifier.train", 3], ["nltk.corpus.sentence_polarity.sents", 3], ["nltk.corpus.udhr.sents", 3], ["nltk.corpus.conll2007.sents", 3], ["nltk.corpus.mac_morpho.sents", 3], ["nltk.corpus.cess_esp.sents", 3], ["nltk.corpus.alpino.tagged_sents", 3], ["nltk.corpus.sinica_treebank.tagged_sents", 3], ["nltk.corpus.reader.api.CorpusReader.fileids", 3], ["nltk.corpus.state_union.fileids", 3], ["nltk.corpus.ptb.tagged_words", 3], ["nltk.corpus.cess_cat.tagged_words", 3], ["nltk.corpus.mac_morpho.tagged_words", 3], ["nltk.corpus.twitter_samples.raw", 3], ["nltk.corpus.subjectivity.categories", 3], ["nltk.corpus.ptb.categories", 3], ["nltk.sem.linearlogic.ApplicationExpression", 3], ["nltk.corpus.conll2007.parsed_sents", 3], ["nltk.corpus.floresta.parsed_sents", 3], ["nltk.parse.chart.Chart.__init__", 3], ["nltk.inference.api.BaseModelBuilderCommand.__init__", 3], ["nltk.parse.chart.ChartParser.__init__", 3], ["nltk.sem.drt.DrtParser.__init__", 3], ["nltk.stem.porter.PorterStemmer.__init__", 3], ["nltk.twitter.api.TweetHandlerI.__init__", 3], ["nltk.tag.ClassifierBasedTagger.__init__", 3], ["nltk.corpus.wordnet.ic", 3], ["nltk.sem.linearlogic.ImpExpression", 3], ["nltk.sem.linearlogic.ConstantExpression", 3], ["nltk.corpus.reader.util.ZipFilePathPointer", 3], ["nltk.sem.linearlogic.VariableExpression", 3], ["nltk.tree.ImmutableTree.convert", 3], ["nltk.tree.transforms.chomsky_normal_form", 3], ["nltk.sem.logic.Expression.__hash__", 3], ["nltk.collocations.TrigramCollocationFinder.from_documents", 3], ["nltk.tokenize.casual.EMOTICON_RE.sub", 3], ["nltk.sem.drt.DrtParser.parse", 3], ["nltk.corpus.reader.util.FileSystemPathPointer", 3], ["nltk.corpus.reuters.paras", 3], ["nltk.tree.transforms.collapse_unary", 3], ["nltk.sem.logic.Tokens.SYMBOLS", 3], ["nltk.corpus.reader.SeekableUnicodeStreamReader", 3], ["nltk.grammar.nonterminals.split", 3], ["nltk.tag.brill.Template", 3], ["nltk.lm.preprocessing.flatten", 3], ["nltk.parse.featurechart.demo", 3], ["nltk.tbl.demo.demo", 3], ["nltk.corpus.gutenberg.readme", 3], ["nltk.corpus.stopwords.readme", 3], ["nltk.re.error", 3], ["nltk.classify.MaxentClassifier.ALGORITHMS", 3], ["nltk.ccg.chart.CCGChartParser", 3], ["nltk.ccg.chart.DefaultRuleSet", 3], ["nltk.corpus.stopwords.union", 3], ["nltk.usage", 3], ["nltk.corpus.ppattach.attachments", 3], ["nltk.corpus.reader.xmldocs.XMLCorpusReader.xml", 3], ["nltk.corpus.shakespeare.xml", 3], ["nltk.corpus.toolbox.xml", 3], ["nltk.corpus.timit.word_times", 3], ["nltk.corpus.verbnet.vnclass", 3], ["nltk.parse.generate.demo_grammar", 3], ["nltk.parse.chart.demo_grammar", 3], ["nltk.classify.textcat.TextCat", 3], ["nltk.classify.MultiClassifierI", 3], ["nltk.corpus.wordnet.of2ss", 3], ["nltk.translate.nist_score.corpus_nist", 3], ["nltk.tokenize.util.is_cjk", 3], ["nltk.tokenize.casual._replace_html_entities", 3], ["nltk.compat.get_im_class", 3], ["nltk.corpus.reader.CHILDESCorpusReader", 3], ["nltk.corpus.cess_esp._tagset", 3], ["nltk.corpus.sentiwordnet.get", 3], ["nltk.util.breadth_first", 3], ["nltk.corpus.wordnet._get_root", 3], ["nltk.lazyimport.LazyModule", 3], ["nltk.metrics.ranks_from_scores", 3], ["nltk.compat.add_py3_data", 3], ["nltk.compat.py3_data", 3], ["nltk.jsontags.json_tags", 3], ["nltk.sem.read_logic", 3], ["nltk.sem.read_valuation", 3], ["nltk.corpus.reader.util._path_from", 3], ["nltk.internals.read_str", 3], ["nltk.sem.logic.SubstituteBindingsI", 3], ["nltk.corpus.treebank._fileids", 3], ["nltk.draw.dispersion_plot", 3], ["nltk.draw.util.MutableOptionMenu", 3], ["nltk.parse.chart.SteppingChartParser", 3], ["nltk.parse.chart.TopDownPredictRule", 3], ["nltk.chunk.RegexpChunkParser", 3], ["nltk.corpus.reader.wordnet.Lemma", 3], ["nltk.ccg.combinator.BackwardApplication", 3], ["nltk.ccg.combinator.BackwardBx", 3], ["nltk.ccg.combinator.BackwardComposition", 3], ["nltk.ccg.combinator.BackwardSx", 3], ["nltk.ccg.combinator.BackwardT", 3], ["nltk.ccg.combinator.ForwardApplication", 3], ["nltk.ccg.combinator.ForwardComposition", 3], ["nltk.ccg.combinator.ForwardSubstitution", 3], ["nltk.ccg.combinator.ForwardT", 3], ["nltk.ccg.lexicon.Token", 3], ["nltk.ccg.api.CCGVar.reset_id", 3], ["nltk.ccg.api.Direction", 3], ["nltk.ccg.api.PrimitiveCategory", 3], ["nltk.chat.eliza.eliza_chat", 3], ["nltk.chat.iesha.iesha_chat", 3], ["nltk.chat.rude.rude_chat", 3], ["nltk.chat.suntsu.suntsu_chat", 3], ["nltk.chat.zen.zen_chat", 3], ["nltk.chunk.named_entity.build_model", 3], ["nltk.probability.entropy", 3], ["nltk.corpus.crubadan", 3], ["nltk.cluster.EMClusterer", 3], ["nltk.cluster.util.Dendrogram", 3], ["nltk.cluster.util.VectorSpaceClusterer.cluster", 3], ["nltk.cluster.api.ClusterI", 3], ["nltk.corpus.framenet.buildindexes", 3], ["nltk.corpus.framenet.docs", 3], ["nltk.corpus.twitter_samples.docs", 3], ["nltk.corpus.framenet.lu_basic", 3], ["nltk.corpus.lin_thesaurus.similarity", 3], ["nltk.corpus.lin_thesaurus.synonyms", 3], ["nltk.corpus.reader.timit.read_timit_block", 3], ["nltk.internals.import_from_stdlib", 3], ["nltk.util.LazySubsequence", 3], ["nltk.util.binary_search_file", 3], ["nltk.grammar._read_cfg_production", 3], ["nltk.sem.drt.AnaphoraResolutionException", 3], ["nltk.sem.drt.resolve_anaphora", 3], ["nltk.sem.root_semrep", 3], ["nltk.inference.api.ModelBuilder", 3], ["nltk.inference.prover9.Prover9CommandParent", 3], ["nltk.inference.prover9.Prover9Parent", 3], ["nltk.inference.api.ProverCommandDecorator", 3], ["nltk.sem.logic.operator.or_", 3], ["nltk.parse.chart.FilteredBottomUpPredictCombineRule", 3], ["nltk.parse.chart.FilteredSingleEdgeFundamentalRule", 3], ["nltk.parse.featurechart.FeatureBottomUpPredictCombineRule", 3], ["nltk.parse.featurechart.FeatureBottomUpPredictRule", 3], ["nltk.parse.featurechart.FeatureEmptyPredictRule", 3], ["nltk.parse.featurechart.FeatureSingleEdgeFundamentalRule", 3], ["nltk.parse.featurechart.FeatureTopDownInitRule", 3], ["nltk.parse.featurechart.FeatureTopDownPredictRule", 3], ["nltk.featstruct.find_variables", 3], ["nltk.featstruct.unify", 3], ["nltk.parse.chart.FundamentalRule", 3], ["nltk.parse.util.taggedsents_to_conll", 3], ["nltk.parse.pchart.LongestChartParser", 3], ["nltk.parse.pchart.RandomChartParser", 3], ["nltk.parse.pchart.UnsortedChartParser", 3], ["nltk.grammar.DependencyProduction", 3], ["nltk.grammar.ProbabilisticDependencyGrammar", 3], ["nltk.grammar.toy_pcfg1", 3], ["nltk.sem.drt.DRS", 3], ["nltk.sem.drt.DrtApplicationExpression", 3], ["nltk.sem.drt.DrtEqualityExpression", 3], ["nltk.sem.drt.DrtNegatedExpression", 3], ["nltk.sem.drt.DrtOrExpression", 3], ["nltk.sem.drt.DrtProposition", 3], ["nltk.sem.drt.DrtTokens.CLOSE", 3], ["nltk.sem.logic.Tokens.CLOSE", 3], ["nltk.sem.drt.DrtTokens.CLOSE_BRACKET", 3], ["nltk.sem.drt.DrtTokens.COMMA", 3], ["nltk.sem.drt.DrtTokens.OPEN", 3], ["nltk.sem.logic.Tokens.OPEN", 3], ["nltk.sem.drt.DrtTokens.OPEN_BRACKET", 3], ["nltk.sem.logic.ExpectedMoreTokensException", 3], ["nltk.sem.logic.UnexpectedTokenException", 3], ["nltk.sem.is_rel", 3], ["nltk.parse.featurechart.InstantiateVarsChart", 3], ["nltk.sem.logic.EventVariableExpression", 3], ["nltk.sem.logic.Tokens.NEQ_LIST", 3], ["nltk.sem.logic.Tokens.TOKENS", 3], ["nltk.sem.logic.is_eventvar", 3], ["nltk.sem.logic.is_funcvar", 3], ["nltk.sem.drt.DrsDrawer", 3], ["nltk.sem.drt.DrtLambdaExpression", 3], ["nltk.sem.linearlogic.AtomicExpression", 3], ["nltk.sem.linearlogic.BindingDict", 3], ["nltk.sem.linearlogic.LinearLogicApplicationException", 3], ["nltk.sem.linearlogic.LinearLogicParser", 3], ["nltk.sem.linearlogic.UnificationException", 3], ["nltk.stem.util.suffix_replace", 3], ["nltk.tbl.Template.ALLTEMPLATES", 3], ["nltk.tag.BrillTagger", 3], ["nltk.probability.RandomProbDist", 3], ["nltk.tag.brill.Pos.expand", 3], ["nltk.tag.brill.Word.expand", 3], ["nltk.tbl.Template.expand", 3], ["nltk.tbl.error_list", 3], ["nltk.tbl.rule.Rule", 3], ["nltk.corpus.reader.util.read_whitespace_block", 3], ["nltk.tag.hmm._create_hmm_tagger", 3], ["nltk.tag.hmm._market_hmm_example", 3], ["nltk.tag.SennaChunkTagger", 3], ["nltk.tag.SennaNERTagger", 3], ["nltk.tgrep.TgrepException", 3], ["nltk.tgrep.tgrep_positions", 3], ["nltk.tgrep.tgrep_tokenize", 3], ["nltk.twitter.Authenticate", 3], ["nltk.translate.IBMModel5.MIN_SCORE_FACTOR", 3], ["nltk.translate.StackDecoder.valid_phrases", 3], ["nltk.translate.stack_decoder._Hypothesis", 3], ["nltk.translate.stack_decoder._Stack", 3], ["nltk.util.choose", 3], ["nltk.twitter.api.BasicTweetHandler", 3], ["nltk.twitter.api.TweetHandlerI.do_continue", 3], ["nltk.twitter.util.guess_path", 3], ["nltk.corpus.framenet.frame_by_name", 3], ["nltk.grammar.read_grammar", 3], ["nltk.grammar.standard_nonterm_parser", 3], ["nltk.parse.corenlp.CoreNLPServer", 3], ["nltk.tokenize.SyllableTokenizer", 3], ["nltk.tree.leaf_treeposition", 3], ["nltk.compat.raw_input", 3], ["nltk.compat.integer_types", 3], ["nltk.compat.iteritems", 3], ["nltk.corpus.movie_reviews.abspaths", 3], ["nltk.app.chunkparser", 3], ["nltk.chunk.conllstr2tree", 3], ["nltk.app.srparser", 3], ["nltk.DrtGlueReadingCommand", 3], ["nltk.evaluate_sents", 3], ["nltk.interpret_sents", 3], ["nltk.toolbox.to_sfm_string", 3], ["nltk.util.elementtree_indent", 3], ["nltk.book.text3.count", 3], ["nltk.classify.rte_classify.rte_classifier", 3], ["nltk.book.text6", 3], ["nltk.parse.transitionparser.Transition", 3], ["nltk.chunk.regexp.RegexpChunkRule", 3], ["nltk.classify.maxent.TadmEventMaxentFeatureEncoding", 3], ["nltk.classify.maxent.TadmMaxentClassifier", 3], ["nltk.tag.ClassifierBasedTagger", 3], ["nltk.tbl.demo", 3], ["nltk.classify.MaxentClassifier", 3], ["nltk.corpus.ppattach", 3], ["nltk.classify.textcat", 3], ["nltk.lazyimport", 3], ["nltk.chunk.named_entity", 3], ["nltk.cluster.api", 3], ["nltk.sem.logic.operator", 3], ["nltk.tbl.rule", 3], ["nltk.test", 3], ["nltk.corpus.multext_east", 3], ["nltk.corpus.udhr2", 3], ["nltk.metrics.segmentation", 3], ["nltk.lm.smoothing", 3], ["nltk.etree", 3], ["nltk.etree.ElementTree", 3], ["nltk.corpora", 3], ["nltk.corpora.chat80", 3], ["nltk.corpus.reader.ChunkedCorpusReader.words", 2], ["nltk.corpus.reader.ConllCorpusReader.words", 2], ["nltk.corpus.semcor.words", 2], ["nltk.corpus.comtrans.words", 2], ["nltk.corpus.shakespeare.words", 2], ["nltk.collocations.FreqDist", 2], ["nltk.parse.chart.Tree", 2], ["nltk.corpus.names.append", 2], ["nltk.classify.maxent.TypedMaxentFeatureEncoding.train", 2], ["nltk.tag.hmm.HiddenMarkovModelTagger.train", 2], ["nltk.classify.PositiveNaiveBayesClassifier.train", 2], ["nltk.corpus.reader.ChunkedCorpusReader.sents", 2], ["nltk.corpus.reader.ConllCorpusReader.sents", 2], ["nltk.corpus.conll2000.sents", 2], ["nltk.corpus.comtrans.sents", 2], ["nltk.corpus.stopwords.sents", 2], ["nltk.corpus.reader.ChunkedCorpusReader.tagged_sents", 2], ["nltk.corpus.reader.ConllCorpusReader.tagged_sents", 2], ["nltk.corpus.ptb.tagged_sents", 2], ["nltk.corpus.timit.fileids", 2], ["nltk.corpus.subjectivity.fileids", 2], ["nltk.corpus.cess_esp.fileids", 2], ["nltk.corpus.reader.ChunkedCorpusReader.tagged_words", 2], ["nltk.corpus.reader.ConllCorpusReader.tagged_words", 2], ["nltk.corpus.conll2000.tagged_words", 2], ["nltk.corpus.reader.ChunkedCorpusReader.raw", 2], ["nltk.corpus.reader.ConllCorpusReader.raw", 2], ["nltk.corpus.stopwords.raw", 2], ["nltk.corpus.reader.ChunkedCorpusReader.chunked_sents", 2], ["nltk.corpus.reader.ConllCorpusReader.chunked_sents", 2], ["nltk.corpus.reader.ConllCorpusReader.parsed_sents", 2], ["nltk.corpus.dependency_treebank.parsed_sents", 2], ["nltk.corpus.reader.api.SyntaxCorpusReader.__init__", 2], ["nltk.corpus.reader.ChunkedCorpusReader.__init__", 2], ["nltk.corpus.reader.ConllChunkCorpusReader.__init__", 2], ["nltk.tag.NgramTagger.__init__", 2], ["nltk.probability.FreqDist.__init__", 2], ["nltk.probability.MLEProbDist.__init__", 2], ["nltk.corpus.reader.ConllCorpusReader.iob_sents", 2], ["nltk.align.AlignedSent", 2], ["nltk.corpus.verbnet.lemmas", 2], ["nltk.tree.prettyprinter.TreePrettyPrinter", 2], ["nltk.metrics.TrigramAssocMeasures.likelihood_ratio", 2], ["nltk.corpus.reader.ChunkedCorpusReader.paras", 2], ["nltk.corpus.propbank.instances", 2], ["nltk.corpus.reuters.abspath", 2], ["nltk.tree.transforms.un_chomsky_normal_form", 2], ["nltk.corpus.brown.ensure_loaded", 2], ["nltk.chat.eliza.demo", 2], ["nltk.corpus.reader.ChunkedCorpusReader.tagged_paras", 2], ["nltk.collocations.BigramAssocMeasures.raw_freq", 2], ["nltk.__version__.startswith", 2], ["nltk.corpus.words.readme", 2], ["nltk.corpus.wordnet.readme", 2], ["nltk.corpus.stopwords._fileids", 2], ["nltk.featstruct.Feature", 2], ["nltk.book.text4.count", 2], ["nltk.tag.stanford.StanfordTagger", 2], ["nltk.tag.simplify_tag", 2], ["nltk.translate.chrf_score.corpus_chrf", 2], ["nltk.tokenize.TabTokenizer", 2], ["nltk.translate.gale_church.align_texts", 2], ["nltk.stem.snowball.GermanStemmer", 2], ["nltk.tokenize.util.spans_to_relative", 2], ["nltk.parse.BottomUpLeftCornerChartParser", 2], ["nltk.parse.LeftCornerChartParser", 2], ["nltk.parse.TopDownChartParser", 2], ["nltk.parse.IncrementalBottomUpChartParser", 2], ["nltk.parse.IncrementalBottomUpLeftCornerChartParser", 2], ["nltk.parse.IncrementalLeftCornerChartParser", 2], ["nltk.parse.IncrementalTopDownChartParser", 2], ["nltk.tag.hmm.demo_pos", 2], ["nltk.corpus.reader.ChunkedCorpusReader.chunked_paras", 2], ["nltk.corpus.reader.ChunkedCorpusReader.chunked_words", 2], ["nltk.corpus.reader.ConllCorpusReader.chunked_words", 2], ["nltk.corpus.reader.ConllCorpusReader.iob_words", 2], ["nltk.corpus.reader.ConllCorpusReader.srl_instances", 2], ["nltk.corpus.reader.ConllCorpusReader.srl_spans", 2], ["nltk.sentiment.util.extract_bigram_feats", 2], ["nltk.chunk.ChunkParserI.evaluate", 2], ["nltk.tokenize.casual.reduce_lengthening", 2], ["nltk.tokenize.casual.remove_handles", 2], ["nltk.book.text1.concordance", 2], ["nltk.book.text4.index", 2], ["nltk.corpus.wordnet.get_members", 2], ["nltk.corpus.wordnet.get_name", 2], ["nltk.corpus.wordnet.get_random_synset", 2], ["nltk.corpus.wordnet.get_subclasses", 2], ["nltk.tag.stanford.CoreNLPNERTagger", 2], ["nltk.metrics.distance.jaro_similarity", 2], ["nltk.corpus.state_union.files", 2], ["nltk.lm.api.LanguageModel", 2], ["nltk.lm.api.Smoothing", 2], ["nltk.tag.perceptron.AveragedPerceptron", 2], ["nltk.compat.BytesIO", 2], ["nltk.corpus.framenet.docs_metadata", 2], ["nltk.util.LazyIteratorList", 2], ["nltk.util.py25", 2], ["nltk.parse.chart.TreeEdge.__unicode__", 2], ["nltk.sentiment.util.save_file", 2], ["nltk.twitter.common.extract_fields", 2], ["nltk.twitter.common.outf_writer_compat", 2], ["nltk.stem.util.prefix_replace", 2], ["nltk.metrics.aline.align", 2], ["nltk.metrics.aline.delta", 2], ["nltk.test.unit.utils.skipIf", 2], ["nltk.compat.TemporaryDirectory", 2], ["nltk.classify.rte_classify.rte_features", 2], ["nltk.stem.porter.PorterStemmer.NLTK_EXTENSIONS", 2], ["nltk.util.py26", 2], ["nltk.tokenize.util.xml_unescape", 2], ["nltk.compat.UTC", 2], ["nltk.compat.UnicodeWriter", 2], ["nltk.__path__", 2], ["nltk.sentiment.vader.negated", 2], ["nltk.translate.ribes_score.word_rank_alignment", 2], ["nltk.brill.fntbl37", 2], ["nltk.corpus.reader.propbank.PropbankSplitTreePointer", 2], ["nltk.grammar._PROBABILITY_RE", 2], ["nltk.tag._get_tagger", 2], ["nltk.translate.gdfa.grow_diag_final_and", 2], ["nltk.parse.corenlp.CoreNLPServerError", 2], ["nltk.lm.KneserNeyInterpolated", 2], ["nltk.tag.brill.nltkdemo18", 2], ["nltk.tree.tree.Tree.__repr__", 2], ["nltk.compat.b", 2], ["nltk.HiddenMarkovModelTagger", 2], ["nltk.tag.hmm._log_add", 2], ["nltk.tag.Default", 2], ["nltk.tag.Unigram", 2], ["nltk.__author__", 2], ["nltk.__keywords__", 2], ["nltk.__license__", 2], ["nltk.__longdescr__", 2], ["nltk.__maintainer__", 2], ["nltk.__maintainer_email__", 2], ["nltk.__url__", 2], ["nltk.corpus.wordnet.wordnet_util.filter_groups", 2], ["nltk.corpus.wordnet.wordnet_util.group_senses_by_pos", 2], ["nltk.corpus.wordnet.wordnet_util.normalize_groups", 2], ["nltk.corpus.wordnet.wordnet_util.remove_person_name", 2], ["nltk.corpus.wordnet.wordnet_util.reorder_groups", 2], ["nltk.corpus.wordnet.wordnet_util.split_and_clean_norm_entries", 2], ["nltk.corpus.wordnet.wordnet_util.topk_groups", 2], ["nltk.tree.pretty_print", 2], ["nltk.tree.subtrees", 2], ["nltk.sem.logic.ANY_TYPE.unicode", 2], ["nltk.corpus.reader.nombank.NombankChainTreePointer", 2], ["nltk.corpus.reader.nombank.NombankSplitTreePointer", 2], ["nltk.grammar.ContextFreeGrammar", 2], ["nltk.util.ingrams", 2], ["nltk.compat.urlopen", 2], ["nltk.compat.itervalues", 2], ["nltk.sentiment.vader.NEGATE", 2], ["nltk.app.nemo", 2], ["nltk.app.chartparser", 2], ["nltk.sem.chat80.sql_demo", 2], ["nltk.corpus.timit.transcription_dict", 2], ["nltk.download_shell", 2], ["nltk.NonprojectiveDependencyParser", 2], ["nltk.batch_pos_tag", 2], ["nltk.corpus.brown.encoding", 2], ["nltk.corpus.brown.root", 2], ["nltk.tag.sequential.RegexpTagger", 2], ["nltk.probability.LaplaceProbDist", 2], ["nltk.tag.sequential.NgramTagger", 2], ["nltk.chat.eliza.eliza_chatbot", 2], ["nltk.parse.transitionparser.TransitionParser", 2], ["nltk.tag._POS_TAGGER", 2], ["nltk.probability.ProbDistI", 2], ["nltk.classify.BinaryMaxentFeatureEncoding", 2], ["nltk.lemmer", 2], ["nltk.collocations.AbstractCollocationFinder", 2], ["nltk.classify.maxent.TypedMaxentFeatureEncoding", 2], ["nltk.tag.hmm.HiddenMarkovModelTagger", 2], ["nltk.tree.prettyprinter", 2], ["nltk.translate.gale_church", 2], ["nltk.chunk.ChunkParserI", 2], ["nltk.test.unit", 2], ["nltk.test.unit.utils", 2], ["nltk.brill", 2], ["nltk.translate.gdfa", 2], ["nltk.corpus.pros_cons", 2], ["nltk.tag.ClassifierBasedPOSTagger", 2], ["nltk.six", 2], ["nltk.tree.parented", 2], ["nltk.metrics.association", 2], ["nltk.compat.htmlentitydefs", 2], ["nltk.corpus.reader.wordlist", 2], ["nltk.corpus.product_reviews_1", 2], ["nltk.corpus.reader.framenet", 2], ["nltk.corpus.europarl_raw.english.words", 1], ["nltk.corpus.multext_east.words", 1], ["nltk.corpus.pros_cons.words", 1], ["nltk.corpus.subjectivity.words", 1], ["nltk.corpus.timit.words", 1], ["nltk.corpus.dependency_treebank.words", 1], ["nltk.corpus.masc_tagged.words", 1], ["nltk.corpus.cmudict.words", 1], ["nltk.help.load", 1], ["nltk.collocations.ngrams", 1], ["nltk.bleu.append", 1], ["nltk.sem.linearlogic.Expression.fromstring", 1], ["nltk.tree.ImmutableParentedTree.fromstring", 1], ["nltk.corpus.reader.wordnet.synset", 1], ["nltk.word_tokenize.synset", 1], ["nltk.book.bigrams", 1], ["nltk.classify.svm.SvmClassifier.train", 1], ["nltk.maxent.ConditionalExponentialClassifier.train", 1], ["nltk.classify.BinaryMaxentFeatureEncoding.train", 1], ["nltk.chunk.util.accuracy", 1], ["nltk.corpus.indian.sents", 1], ["nltk.corpus.genesis.sents", 1], ["nltk.corpus.conll2002.sents", 1], ["nltk.corpus.pros_cons.sents", 1], ["nltk.corpus.state_union.sents", 1], ["nltk.corpus.udhr2.sents", 1], ["nltk.corpus.dependency_treebank.sents", 1], ["nltk.corpus.floresta.sents", 1], ["nltk.corpus.reader.bracket_parse.BracketParseCorpusReader.tagged_sents", 1], ["nltk.corpus.multext_east.tagged_sents", 1], ["nltk.corpus.rte.fileids", 1], ["nltk.corpus.senseval.fileids", 1], ["nltk.corpus.udhr2.fileids", 1], ["nltk.corpus.nombank.fileids", 1], ["nltk.corpus.nps_chat.fileids", 1], ["nltk.corpus.comtrans.fileids", 1], ["nltk.corpus.sinica_treebank.fileids", 1], ["nltk.corpus.multext_east.tagged_words", 1], ["nltk.corpus.cess_esp.tagged_words", 1], ["nltk.corpus.nps_chat.raw", 1], ["nltk.corpus.udhr2.raw", 1], ["nltk.corpus.abc.raw", 1], ["nltk.corpus.words.raw", 1], ["nltk.wordnet.wordnet.all_synsets", 1], ["nltk.corpus.sentence_polarity.categories", 1], ["nltk.tag.sequential.DefaultTagger", 1], ["nltk.app.wordnet", 1], ["nltk.parser.stanford.StanfordParser", 1], ["nltk.corpus.reader.bracket_parse.BracketParseCorpusReader.__init__", 1], ["nltk.tokenize.casual.TweetTokenizer.__init__", 1], ["nltk.tag.sequential.RegexpTagger.__init__", 1], ["nltk.tag.sequential.UnigramTagger.__init__", 1], ["nltk.parse.dependencygraph.DependencyGraph.__init__", 1], ["nltk.stem.arlstem.ARLSTem.__init__", 1], ["nltk.stem.isri.ISRIStemmer.__init__", 1], ["nltk.tag.sequential.NgramTagger.__init__", 1], ["nltk.tree.tree.Tree.__init__", 1], ["nltk.tag.ClassifierBasedPOSTagger.__init__", 1], ["nltk.probability.ConditionalFreqDist.__init__", 1], ["nltk.tree.Tree.__init__", 1], ["nltk.collocations.AbstractCollocationFinder.__init__", 1], ["nltk.compat.Counter.__init__", 1], ["nltk.tag.sequential.TrigramTagger", 1], ["nltk.corpus.conll2000.iob_sents", 1], ["nltk.corpus.reader.dependency.DependencyGraph", 1], ["nltk.stemmer.StemmerI", 1], ["nltk.translate.api.Alignment", 1], ["nltk.six.text_type", 1], ["nltk.collections.Counter", 1], ["nltk.tree.parented.ParentedTree", 1], ["nltk.probability.ProbDistI.generate", 1], ["nltk.tree.Tree.convert", 1], ["nltk.tree.Tree.chomsky_normal_form", 1], ["nltk.Tree.chomsky_normal_form", 1], ["nltk.tree.Tree.__hash__", 1], ["nltk.sequential.AffixTagger", 1], ["nltk.align.ibm1.IBMModel1", 1], ["nltk.translate.ibm1.IBMModel1", 1], ["nltk.tokenize.casual.HANG_RE.sub", 1], ["nltk.metrics.association.QuadgramAssocMeasures.likelihood_ratio", 1], ["nltk.collocations.BigramAssocMeasures.likelihood_ratio", 1], ["nltk.metrics.QuadgramAssocMeasures.likelihood_ratio", 1], ["nltk.wordnet.wordnet.langs", 1], ["nltk.corpus.verbnet.frames", 1], ["nltk.collocations.BigramAssocMeasures.pmi", 1], ["nltk.corpus.inaugural.paras", 1], ["nltk.corpus.words.add", 1], ["nltk.corpus.nombank.instances", 1], ["nltk.lm.vocabulary.Vocabulary", 1], ["nltk.corpus.europarl_raw.french.abspath", 1], ["nltk.corpus.gutenberg.abspath", 1], ["nltk.corpus.names.abspath", 1], ["nltk.corpus.stopwords.abspath", 1], ["nltk.align.ibm2.IBMModel2", 1], ["nltk.corpus.webtext.open", 1], ["nltk.parse.chart.BottomUpChartParser", 1], ["nltk.tag.crf.CRFTagger", 1], ["nltk.tree.Tree.collapse_unary", 1], ["nltk.Tree.collapse_unary", 1], ["nltk.tag._POS_TAGGER.split", 1], ["nltk.corpus.words.extend", 1], ["nltk.corpus.sentiwordnet.ensure_loaded", 1], ["nltk.corpus.gutenberg.ensure_loaded", 1], ["nltk.corpus.words.ensure_loaded", 1], ["nltk.chat.iesha.demo", 1], ["nltk.chat.rude.demo", 1], ["nltk.chat.suntsu.demo", 1], ["nltk.chat.zen.demo", 1], ["nltk.draw.rdparser.demo", 1], ["nltk.draw.srparser.demo", 1], ["nltk.draw.chart.demo", 1], ["nltk.classify.positivenaivebayes.demo", 1], ["nltk.tokenize.casual.WORD_RE.findall", 1], ["nltk.sentiment.util.EMOTICON_RE.findall", 1], ["nltk.book.text3.findall", 1], ["nltk.lm.counter.NgramCounter", 1], ["nltk.classify.senna.Senna", 1], ["nltk.grammar.parse_cfg", 1], ["nltk.classify.megam.config_megam", 1], ["nltk.corpus.mac_morpho.tagged_paras", 1], ["nltk.metrics.__file__", 1], ["nltk.lemmer.lemmatize", 1], ["nltk.grammar.FeatDict", 1], ["nltk.corpus.inaugural.readme", 1], ["nltk.sem.relextract.clause", 1], ["nltk.corpus.rte.xml", 1], ["nltk.corpus.semcor.xml", 1], ["nltk.metrics.segmentation.windowdiff", 1], ["nltk.compat.htmlentitydefs.name2codepoint.get", 1], ["nltk.corpus.stopwords.__dict__.get", 1], ["nltk.data.get", 1], ["nltk.corpus.stopwords._get_root", 1], ["nltk.book.text4.dispersion_plot", 1], ["nltk.draw.dispersion.dispersion_plot", 1], ["nltk.book.text3.dispersion_plot", 1], ["nltk.token.Token", 1], ["nltk.cluster.em.EMClusterer", 1], ["nltk.corpus.reader.wordlist.WordListCorpusReader", 1], ["nltk.tag.senna.SennaChunkTagger", 1], ["nltk.tag.senna.SennaNERTagger", 1], ["nltk.translate.stack_decoder.StackDecoder", 1], ["nltk.chunk.util.conllstr2tree", 1], ["nltk.book.text6.count", 1], ["nltk.book.text1.count", 1], ["nltk.parse.chart.BottomUpLeftCornerChartParser", 1], ["nltk.corpus.conll2000.chunked_words", 1], ["nltk.book.text2.concordance", 1], ["nltk.book.text3.concordance", 1], ["nltk.app.concordance", 1], ["nltk.tag.stanford.tag", 1], ["nltk.corpus.treebank.files", 1], ["nltk.tree.immutable.ImmutableTree", 1], ["nltk.parse.NonprojectiveDependencyParser", 1], ["nltk.tree.Tree.root", 1], ["nltk.internals._java_bin", 1], ["nltk.corpus.twitter_samples.string", 1], ["nltk.chat.iesha.iesha_chatbot", 1], ["nltk.chat.rude.rude_chatbot", 1], ["nltk.chat.suntsu.suntsu_chatbot", 1], ["nltk.chat.zen.zen_chatbot", 1], ["nltk.tokenize.stanford.CoreNLPTokenizer", 1], ["nltk.parse.util.taggedsent_to_conll", 1], ["nltk.corpus.stopwords.word", 1], ["nltk.tokenize.word", 1], ["nltk.clean_url", 1], ["nltk.corpus.semcor.chunk_sents", 1], ["nltk.corpus.semcor.chunks", 1], ["nltk.corpus.comparative_sentences.comparisons", 1], ["nltk.corpus.product_reviews_1.features", 1], ["nltk.corpus.product_reviews_1.reviews", 1], ["nltk.corpus.timit.phone_times", 1], ["nltk.corpus.timit.phone_trees", 1], ["nltk.corpus.timit.play", 1], ["nltk.corpus.timit.sent_times", 1], ["nltk.corpus.timit.sentid", 1], ["nltk.corpus.timit.spkrid", 1], ["nltk.corpus.timit.utteranceids", 1], ["nltk.corpus.verbnet.pprint", 1], ["nltk.sem.lfg.FStructure.read_depgraph", 1], ["nltk.sem.relextract.semi_rel2reldict", 1], ["nltk.sem.relextract.tree2semi_rel", 1], ["nltk.corpus.stopwords.readlines", 1], ["nltk.corpus.reuters.labels", 1], ["nltk.corpus.reuters.load_data", 1], ["nltk.parse.chart.BU_LC_STRATEGY", 1], ["nltk.corpus.wordnet.custom_lemmas", 1], ["nltk.chat.eliza.eliza_chatbot.respond", 1], ["nltk.data.columns.get_loc", 1], ["nltk.corpus.words.copy", 1], ["nltk.data.copy", 1], ["nltk.data.iloc", 1], ["nltk.data.loc", 1], ["nltk.data.dropna", 1], ["nltk.draw.tree.node", 1], ["nltk.corpus.wordnet.ss2of", 1], ["nltk.tree.Tree.pos", 1], ["nltk.tokenize.casual.EMOTICON_RE.search", 1], ["nltk.tokenize.punkt.PunktSentenceTokenizer.PUNCTUATION", 1], ["nltk.corpus.stopwords.to_csv", 1], ["nltk.book.text1.collocations", 1], ["nltk.book.text3.collocations", 1], ["nltk.book.text1.similar", 1], ["nltk.book.text2.similar", 1], ["nltk.tree._child_names", 1], ["nltk.corpus.verbenet", 1], ["nltk.corpus.verbnet.frames_for_lemma", 1], ["nltk.parse.stanford.GenericStanfordParser", 1], ["nltk.tag.mapping._MAPPINGS", 1], ["nltk.tag.mapping._load_universal_map", 1], ["nltk.tokenize.punkt.PunktLanguageVars.sent_end_chars", 1], ["nltk.tokenize.punkt.PunktSentenceTokenizer.missing_models_message", 1], ["nltk.classify.util.check_megam_config", 1], ["nltk.tag.hunpos.HunposTagger", 1], ["nltk.tag.HunposTagger", 1], ["nltk.metrics.segmentation.pk", 1], ["nltk.corpus.reader.framenet.FramenetCorpusReader", 1], ["nltk.stem.snowball.NorwegianStemmer", 1], ["nltk.re.UNICODE", 1], ["nltk.translate.ribes_score.sentence_ribes", 1], ["nltk.corpus.reader.wordlist.MWAPPDBCorpusReader", 1], ["nltk.KneserNeyProbDist", 1], ["nltk.corpus.reader.NKJPCorpusReader", 1], ["nltk.tag.stanford.POSTagger.parse_output", 1], ["nltk.parse.transitionparser.Configuration", 1], ["nltk.parse.transitionparser.Transition.LEFT_ARC", 1], ["nltk.parse.transitionparser.Transition.SHIFT", 1], ["nltk.parse.transitionparser.TransitionParser.ARC_STANDARD", 1], ["nltk.downloader.download_dir", 1], ["nltk.corpus.wordnet._lemma_pos_offset_map", 1], ["nltk.corpus.europarl_raw.italian", 1], ["nltk.sem.evaluate.Error", 1], ["nltk.tgrep.tgrep_compile", 1], ["nltk.tokenize._treebank_word_tokenizer.span_tokenize", 1], ["nltk.chunk._MULTICLASS_NE_CHUNKER", 1], ["nltk.tag.simplify.simplify_wsj_tag", 1], ["nltk.tag.simplify_wsj_tag", 1], ["nltk.tag.ClassifierBasedPOSTagger.feature_detector", 1], ["nltk.tag.brill.FastBrillTaggerTrainer", 1], ["nltk.tag.brill.ProximateTagsRule", 1], ["nltk.tag.brill.ProximateWordsRule", 1], ["nltk.tag.brill.SymmetricProximateTokensTemplate", 1], ["nltk.corpus.reader.IEERCorpusReader", 1], ["nltk.corpus.reader.IndianCorpusReader", 1], ["nltk.corpus.reader.NPSChatCorpusReader", 1], ["nltk.corpus.reader.SwitchboardCorpusReader", 1], ["nltk.PCFG.EPSILON", 1], ["nltk.probability.LaplaceProbDist.logprob", 1], ["nltk.corpus.reader.util.read_sexpr_block", 1], ["nltk.probability.ConditionalProbDistI", 1], ["nltk.sentiment.vader.allcap_differential", 1], ["nltk.probability.WittenBellProbDist", 1], ["nltk.collocations.BigramAssocMeasures.student_t", 1], ["nltk.tree.productions", 1], ["nltk.tree.treepositions", 1], ["nltk.parse.corenlp.try_port", 1], ["nltk.sem.logic.ENTITY_TYPE", 1], ["nltk.sem.logic.EVENT_TYPE", 1], ["nltk.sem.logic.InconsistentTypeHierarchyException", 1], ["nltk.sem.logic.VariableBinderExpression", 1], ["nltk.tag.mapping.tagset_mapping", 1], ["nltk.tag.tagset_mapping", 1], ["nltk.util.parallelize_preprocess", 1], ["nltk.util.acyclic_branches_depth_first", 1], ["nltk.util.acyclic_breadth_first", 1], ["nltk.util.edge_closure", 1], ["nltk.util.edges2dot", 1], ["nltk.lm.util.log_base2", 1], ["nltk.lm.smoothing.AbsoluteDiscounting", 1], ["nltk.lm.smoothing.KneserNey", 1], ["nltk.lm.smoothing.WittenBell", 1], ["nltk.util.pairwise", 1], ["nltk.lm.AbsoluteDiscountingInterpolated", 1], ["nltk.lm.StupidBackoff", 1], ["nltk.lm.WittenBellInterpolated", 1], ["nltk.lm.preprocessing.padded_everygrams", 1], ["nltk.parse.bllip.BllipParser.from_unified_model_dir", 1], ["nltk.jsontags.JSONTaggedDecoder", 1], ["nltk.jsontags.JSONTaggedEncoder", 1], ["nltk.corpus.nombank.nouns", 1], ["nltk.corpus.nombank.rolesets", 1], ["nltk.corpus.reader.pl196x.Pl196xCorpusReader", 1], ["nltk.translate.ribes_score.corpus_ribes", 1], ["nltk.tokenize.LegalitySyllableTokenizer", 1], ["nltk.tokenize.punkt.PunktBaseClass", 1], ["nltk.tokenize.punkt._pair_iter", 1], ["nltk.tokenize.destructive.MacIntyreContractions", 1], ["nltk.tokenize.treebank.MacIntyreContractions", 1], ["nltk.tree.parented.MultiParentedTree", 1], ["nltk.tree.immutable.ImmutableMultiParentedTree", 1], ["nltk.tree.immutable.ImmutableParentedTree", 1], ["nltk.tree.immutable.ImmutableProbabilisticTree", 1], ["nltk.internals.Deprecated", 1], ["nltk.compat.StringIO.getvalue", 1], ["nltk.compat.StringIO.truncate", 1], ["nltk.compat.reload", 1], ["nltk.draw.util.SequenceWidget", 1], ["nltk.draw.util.SpaceWidget", 1], ["nltk.tag.hmm._NINF", 1], ["nltk.corpus.brown.tagged", 1], ["nltk.corpus.find_corpus_file", 1], ["nltk.etree.ElementTree.ElementTree", 1], ["nltk.etree.ElementTree.Element", 1], ["nltk.etree.ElementTree.iselement", 1], ["nltk.__classifiers__", 1], ["nltk.downloader._indent_xml", 1], ["nltk.downloader.build_index", 1], ["nltk.tag.Bigram", 1], ["nltk.tag.Trigram", 1], ["nltk.parse.ChartParse", 1], ["nltk.corpora.chat80.make_valuation", 1], ["nltk.corpora.chat80.process_bundle", 1], ["nltk.corpora.chat80.rels", 1], ["nltk.corpus.reader.ConllSRLInstance", 1], ["nltk.corpus.reader.ConllSRLInstanceList", 1], ["nltk.raise_error", 1], ["nltk.util.ngrams.keys", 1], ["nltk.corpus.reader.propbank.PropbankChainTreePointer", 1], ["nltk.corpus.reader.nombank.NombankTreePointer", 1], ["nltk.corpus.reader.propbank.PropbankTreePointer", 1], ["nltk.tag.simplify_alpino_tag", 1], ["nltk.tag.simplify_brown_tag", 1], ["nltk.tag.simplify_indian_tag", 1], ["nltk.sourcedstring.SourcedStringStream", 1], ["nltk.model.api.ModelI", 1], ["nltk.internals.abstract", 1], ["nltk.test.doctest_nose_plugin.DoctestFix", 1], ["nltk.tree.Tree._repr_png_", 1], ["nltk.Tree._repr_svg_", 1], ["nltk.parse.earleychart.IncrementalChart", 1], ["nltk.corpus.reader.sentiwordnet.SentiWordNetCorpusReader", 1], ["nltk.chktype.chktype", 1], ["nltk.corpus.reader.timit.TimitCorpusReader", 1], ["nltk.compat.unquote_plus", 1], ["nltk.corpus.framenet.documents", 1], ["nltk.compat.url2pathname", 1], ["nltk.compat.HTTPError", 1], ["nltk.compat.URLError", 1], ["nltk.compat.htmlentitydefs.entitydefs", 1], ["nltk.compat.imap", 1], ["nltk.compat.binary_type", 1], ["nltk.six.add_metaclass", 1], ["nltk.compat.int2byte", 1], ["nltk.compat.unichr", 1], ["nltk.compat.u", 1], ["nltk.compat.HTTPPasswordMgrWithDefaultRealm", 1], ["nltk.compat.ProxyBasicAuthHandler", 1], ["nltk.compat.ProxyDigestAuthHandler", 1], ["nltk.compat.ProxyHandler", 1], ["nltk.compat.build_opener", 1], ["nltk.compat.class_types", 1], ["nltk.compat.getproxies", 1], ["nltk.compat.install_opener", 1], ["nltk.chat.bots", 1], ["nltk.corpus.reader.framenet.AttrDict", 1], ["nltk.data.replace", 1], ["nltk.word_", 1], ["nltk.sentiment.vader.SentiText", 1], ["nltk.parse.FeatureEarleyChartParser", 1], ["nltk.FeatureEarleyChartParser", 1], ["nltk.featstruct.UnificationFailure", 1], ["nltk.book.text1.tokens", 1], ["nltk.book.text2.tokens", 1], ["nltk.book.text5", 1], ["nltk.book.text7", 1], ["nltk.book.text8", 1], ["nltk.book.text9", 1], ["nltk.metrics.interval_distance", 1], ["nltk.ccg.chart.ApplicationRuleSet", 1], ["nltk.ccg.chart.CompositionRuleSet", 1], ["nltk.ccg.chart.TypeRaiseRuleSet", 1], ["nltk.ccg.chart.printCCGDerivation", 1], ["nltk.corpus.framenet.lu", 1], ["nltk.corpus.propbank.roleset", 1], ["nltk.corpus.propbank.verbs", 1], ["nltk.print_string", 1], ["nltk.book.text3.plot", 1], ["nltk.sentiment.util.demo_liu_hu_lexicon", 1], ["nltk.metrics.association.BigramAssocMeasures.jaccard", 1], ["nltk.metrics.segmentation.ghd", 1], ["nltk.stem.snowball.ArabicStemmer", 1], ["nltk.corpus.stopword", 1], ["nltk.corpus.masc_tagged", 1], ["nltk.bleu", 1], ["nltk.tree.ImmutableParentedTree", 1], ["nltk.word_tokenize", 1], ["nltk.classify.svm", 1], ["nltk.classify.svm.SvmClassifier", 1], ["nltk.maxent", 1], ["nltk.maxent.ConditionalExponentialClassifier", 1], ["nltk.parser", 1], ["nltk.parser.stanford", 1], ["nltk.corpus.reader.dependency", 1], ["nltk.stemmer", 1], ["nltk.collections", 1], ["nltk.sequential", 1], ["nltk.align.ibm1", 1], ["nltk.translate.ibm1", 1], ["nltk.tokenize.casual.HANG_RE", 1], ["nltk.metrics.association.QuadgramAssocMeasures", 1], ["nltk.metrics.QuadgramAssocMeasures", 1], ["nltk.lm.vocabulary", 1], ["nltk.align.ibm2", 1], ["nltk.tag.crf", 1], ["nltk.draw.rdparser", 1], ["nltk.draw.srparser", 1], ["nltk.draw.chart", 1], ["nltk.classify.positivenaivebayes", 1], ["nltk.tokenize.casual.WORD_RE", 1], ["nltk.sentiment.util.EMOTICON_RE", 1], ["nltk.lm.counter", 1], ["nltk.classify.senna", 1], ["nltk.compat.htmlentitydefs.name2codepoint", 1], ["nltk.corpus.stopwords.__dict__", 1], ["nltk.draw.dispersion", 1], ["nltk.token", 1], ["nltk.cluster.em", 1], ["nltk.corpus.comparative_sentences", 1], ["nltk.sem.lfg", 1], ["nltk.sem.lfg.FStructure", 1], ["nltk.data.columns", 1], ["nltk.tag.hunpos", 1], ["nltk.tag.simplify", 1], ["nltk.PCFG", 1], ["nltk.lm.util", 1], ["nltk.parse.bllip", 1], ["nltk.parse.bllip.BllipParser", 1], ["nltk.corpus.reader.pl196x", 1], ["nltk.sourcedstring", 1], ["nltk.model.api", 1], ["nltk.test.doctest_nose_plugin", 1], ["nltk.parse.earleychart", 1], ["nltk.corpus.reader.sentiwordnet", 1], ["nltk.chktype", 1], ["nltk.metrics.association.BigramAssocMeasures", 1]]